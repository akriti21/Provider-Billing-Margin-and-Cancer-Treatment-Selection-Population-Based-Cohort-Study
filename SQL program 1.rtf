{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi0\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\fbidi \froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}
{\f5\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier;}{\f6\fbidi \froman\fcharset0\fprq2{\*\panose 02020603040505020304}Tms Rmn;}{\f7\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604020202030204}Helv;}
{\f8\fbidi \froman\fcharset0\fprq2{\*\panose 02040503060506020304}New York;}{\f9\fbidi \fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f10\fbidi \fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f11\fbidi \fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt ?l?r ??\'81\'66c};}{\f12\fbidi \froman\fcharset129\fprq2{\*\panose 02030600000101010101}Batang{\*\falt \'a8\'cfoUAA};}
{\f13\fbidi \fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt ??\'a1\'a7??};}{\f14\fbidi \froman\fcharset136\fprq2{\*\panose 02020500000000000000}PMingLiU{\*\falt !Ps2OcuAe};}
{\f15\fbidi \fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic{\*\falt ?l?r ?S?V?b?N};}{\f16\fbidi \fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}Dotum{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f17\fbidi \fmodern\fcharset134\fprq1{\*\panose 02010600030101010101}SimHei{\*\falt o\'a1\'a72\'a1\'a7??};}{\f18\fbidi \fmodern\fcharset136\fprq1{\*\panose 02020509000000000000}MingLiU{\*\falt 2OcuAe};}
{\f19\fbidi \froman\fcharset128\fprq1{\*\panose 02020609040305080305}Mincho{\*\falt ??\'81\'66c};}{\f20\fbidi \fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}Gulim{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f21\fbidi \froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century;}{\f22\fbidi \froman\fcharset222\fprq2{\*\panose 02020603050405020304}Angsana New;}{\f23\fbidi \fswiss\fcharset222\fprq2{\*\panose 020b0304020202020204}Cordia New;}
{\f24\fbidi \froman\fcharset0\fprq2{\*\panose 00000400000000000000}Mangal;}{\f25\fbidi \fswiss\fcharset0\fprq2{\*\panose 02000400000000000000}Latha;}{\f26\fbidi \froman\fcharset0\fprq2{\*\panose 010a0502050306030303}Sylfaen;}
{\f27\fbidi \fswiss\fcharset0\fprq2{\*\panose 00000400000000000000}Vrinda;}{\f28\fbidi \fswiss\fcharset0\fprq2{\*\panose 02000500000000000000}Raavi;}{\f29\fbidi \fswiss\fcharset0\fprq2{\*\panose 02000500000000000000}Shruti;}
{\f30\fbidi \froman\fcharset1\fprq2{\*\panose 00000400000000000000}Sendnya;}{\f31\fbidi \fswiss\fcharset0\fprq2{\*\panose 02000500000000000000}Gautami;}{\f32\fbidi \fswiss\fcharset0\fprq2{\*\panose 00000400000000000000}Tunga;}
{\f33\fbidi \froman\fcharset1\fprq2{\*\panose 00000000000000000000}Estrangelo Edessa;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f35\fbidi \fswiss\fcharset128\fprq2{\*\panose 020b0400000000000000}Yu Gothic{\*\falt ?a?S?V?b?N};}{\f36\fbidi \fnil\fcharset134\fprq2{\*\panose 02010600030101010101}DengXian{\*\falt |\'a8\'ac\'a1\'a7\'a1\'a7??};}
{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f38\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}{\f39\fbidi \froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}
{\f40\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f41\fbidi \fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS;}{\f42\fbidi \fswiss\fcharset0\fprq2 Aptos Display;}
{\f43\fbidi \fswiss\fcharset0\fprq2 Aptos;}{\f44\fbidi \fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Segoe UI Emoji;}{\f45\fbidi \fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Segoe UI;}
{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2 Aptos Display;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2 Aptos;}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f46\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f47\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f49\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f50\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\f51\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f52\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f53\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f54\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f56\fbidi \fswiss\fcharset238\fprq2 Arial CE;}{\f57\fbidi \fswiss\fcharset204\fprq2 Arial Cyr;}{\f59\fbidi \fswiss\fcharset161\fprq2 Arial Greek;}
{\f60\fbidi \fswiss\fcharset162\fprq2 Arial Tur;}{\f61\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f62\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f63\fbidi \fswiss\fcharset186\fprq2 Arial Baltic;}
{\f64\fbidi \fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f66\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}{\f67\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}{\f69\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}
{\f70\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f71\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f72\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f73\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}
{\f74\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f86\fbidi \fswiss\fcharset238\fprq2 Helvetica CE;}{\f87\fbidi \fswiss\fcharset204\fprq2 Helvetica Cyr;}{\f89\fbidi \fswiss\fcharset161\fprq2 Helvetica Greek;}
{\f90\fbidi \fswiss\fcharset162\fprq2 Helvetica Tur;}{\f91\fbidi \fswiss\fcharset177\fprq2 Helvetica (Hebrew);}{\f92\fbidi \fswiss\fcharset178\fprq2 Helvetica (Arabic);}{\f93\fbidi \fswiss\fcharset186\fprq2 Helvetica Baltic;}
{\f94\fbidi \fswiss\fcharset163\fprq2 Helvetica (Vietnamese);}{\f158\fbidi \fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt ?l?r ??\'81\'66c};}{\f156\fbidi \fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt ?l?r ??\'81\'66c};}
{\f157\fbidi \fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt ?l?r ??\'81\'66c};}{\f159\fbidi \fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt ?l?r ??\'81\'66c};}{\f160\fbidi \fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt ?l?r ??\'81\'66c};}
{\f163\fbidi \fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt ?l?r ??\'81\'66c};}{\f168\fbidi \froman\fcharset0\fprq2 Batang Western{\*\falt \'a8\'cfoUAA};}{\f166\fbidi \froman\fcharset238\fprq2 Batang CE{\*\falt \'a8\'cfoUAA};}
{\f167\fbidi \froman\fcharset204\fprq2 Batang Cyr{\*\falt \'a8\'cfoUAA};}{\f169\fbidi \froman\fcharset161\fprq2 Batang Greek{\*\falt \'a8\'cfoUAA};}{\f170\fbidi \froman\fcharset162\fprq2 Batang Tur{\*\falt \'a8\'cfoUAA};}
{\f173\fbidi \froman\fcharset186\fprq2 Batang Baltic{\*\falt \'a8\'cfoUAA};}{\f178\fbidi \fnil\fcharset0\fprq2 SimSun Western{\*\falt ??\'a1\'a7??};}{\f188\fbidi \froman\fcharset0\fprq2 PMingLiU Western{\*\falt !Ps2OcuAe};}
{\f198\fbidi \fmodern\fcharset0\fprq1 MS Gothic Western{\*\falt ?l?r ?S?V?b?N};}{\f196\fbidi \fmodern\fcharset238\fprq1 MS Gothic CE{\*\falt ?l?r ?S?V?b?N};}{\f197\fbidi \fmodern\fcharset204\fprq1 MS Gothic Cyr{\*\falt ?l?r ?S?V?b?N};}
{\f199\fbidi \fmodern\fcharset161\fprq1 MS Gothic Greek{\*\falt ?l?r ?S?V?b?N};}{\f200\fbidi \fmodern\fcharset162\fprq1 MS Gothic Tur{\*\falt ?l?r ?S?V?b?N};}{\f203\fbidi \fmodern\fcharset186\fprq1 MS Gothic Baltic{\*\falt ?l?r ?S?V?b?N};}
{\f208\fbidi \fswiss\fcharset0\fprq2 Dotum Western{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}{\f206\fbidi \fswiss\fcharset238\fprq2 Dotum CE{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f207\fbidi \fswiss\fcharset204\fprq2 Dotum Cyr{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}{\f209\fbidi \fswiss\fcharset161\fprq2 Dotum Greek{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f210\fbidi \fswiss\fcharset162\fprq2 Dotum Tur{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}{\f213\fbidi \fswiss\fcharset186\fprq2 Dotum Baltic{\*\falt \'a1\'cdi\'a1\'cb\'a1\'fe\'a1\'cb?o};}
{\f218\fbidi \fmodern\fcharset0\fprq1 SimHei Western{\*\falt o\'a1\'a72\'a1\'a7??};}{\f228\fbidi \fmodern\fcharset0\fprq1 MingLiU Western{\*\falt 2OcuAe};}
{\f248\fbidi \fswiss\fcharset0\fprq2 Gulim Western{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}{\f246\fbidi \fswiss\fcharset238\fprq2 Gulim CE{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f247\fbidi \fswiss\fcharset204\fprq2 Gulim Cyr{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}{\f249\fbidi \fswiss\fcharset161\fprq2 Gulim Greek{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f250\fbidi \fswiss\fcharset162\fprq2 Gulim Tur{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}{\f253\fbidi \fswiss\fcharset186\fprq2 Gulim Baltic{\*\falt \'a2\'ae\'a8\'fa\'a1\'a7u\'a1\'cb\'a1\'fe\'a8\'cf\'a1\'c0};}
{\f256\fbidi \froman\fcharset238\fprq2 Century CE;}{\f257\fbidi \froman\fcharset204\fprq2 Century Cyr;}{\f259\fbidi \froman\fcharset161\fprq2 Century Greek;}{\f260\fbidi \froman\fcharset162\fprq2 Century Tur;}
{\f263\fbidi \froman\fcharset186\fprq2 Century Baltic;}{\f268\fbidi \froman\fcharset0\fprq2 Angsana New;}{\f278\fbidi \fswiss\fcharset0\fprq2 Cordia New;}{\f306\fbidi \froman\fcharset238\fprq2 Sylfaen CE;}
{\f307\fbidi \froman\fcharset204\fprq2 Sylfaen Cyr;}{\f309\fbidi \froman\fcharset161\fprq2 Sylfaen Greek;}{\f310\fbidi \froman\fcharset162\fprq2 Sylfaen Tur;}{\f313\fbidi \froman\fcharset186\fprq2 Sylfaen Baltic;}
{\f386\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}{\f387\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}{\f389\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f390\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}
{\f393\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}{\f394\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}{\f398\fbidi \fswiss\fcharset0\fprq2 Yu Gothic Western{\*\falt ?a?S?V?b?N};}
{\f396\fbidi \fswiss\fcharset238\fprq2 Yu Gothic CE{\*\falt ?a?S?V?b?N};}{\f397\fbidi \fswiss\fcharset204\fprq2 Yu Gothic Cyr{\*\falt ?a?S?V?b?N};}{\f399\fbidi \fswiss\fcharset161\fprq2 Yu Gothic Greek{\*\falt ?a?S?V?b?N};}
{\f400\fbidi \fswiss\fcharset162\fprq2 Yu Gothic Tur{\*\falt ?a?S?V?b?N};}{\f403\fbidi \fswiss\fcharset186\fprq2 Yu Gothic Baltic{\*\falt ?a?S?V?b?N};}{\f408\fbidi \fnil\fcharset0\fprq2 DengXian Western{\*\falt |\'a8\'ac\'a1\'a7\'a1\'a7??};}
{\f406\fbidi \fnil\fcharset238\fprq2 DengXian CE{\*\falt |\'a8\'ac\'a1\'a7\'a1\'a7??};}{\f407\fbidi \fnil\fcharset204\fprq2 DengXian Cyr{\*\falt |\'a8\'ac\'a1\'a7\'a1\'a7??};}
{\f409\fbidi \fnil\fcharset161\fprq2 DengXian Greek{\*\falt |\'a8\'ac\'a1\'a7\'a1\'a7??};}{\f416\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f417\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\f419\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}
{\f420\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f421\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\f422\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\f423\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\f424\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\f426\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\f427\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}{\f429\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}
{\f430\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\f431\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}{\f432\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}{\f433\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}
{\f434\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}{\f436\fbidi \froman\fcharset238\fprq2 Palatino Linotype CE;}{\f437\fbidi \froman\fcharset204\fprq2 Palatino Linotype Cyr;}{\f439\fbidi \froman\fcharset161\fprq2 Palatino Linotype Greek;}
{\f440\fbidi \froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f443\fbidi \froman\fcharset186\fprq2 Palatino Linotype Baltic;}{\f444\fbidi \froman\fcharset163\fprq2 Palatino Linotype (Vietnamese);}{\f446\fbidi \fswiss\fcharset238\fprq2 Verdana CE;}
{\f447\fbidi \fswiss\fcharset204\fprq2 Verdana Cyr;}{\f449\fbidi \fswiss\fcharset161\fprq2 Verdana Greek;}{\f450\fbidi \fswiss\fcharset162\fprq2 Verdana Tur;}{\f453\fbidi \fswiss\fcharset186\fprq2 Verdana Baltic;}
{\f454\fbidi \fswiss\fcharset163\fprq2 Verdana (Vietnamese);}{\f458\fbidi \fswiss\fcharset0\fprq2 Arial Unicode MS Western;}{\f456\fbidi \fswiss\fcharset238\fprq2 Arial Unicode MS CE;}{\f457\fbidi \fswiss\fcharset204\fprq2 Arial Unicode MS Cyr;}
{\f459\fbidi \fswiss\fcharset161\fprq2 Arial Unicode MS Greek;}{\f460\fbidi \fswiss\fcharset162\fprq2 Arial Unicode MS Tur;}{\f461\fbidi \fswiss\fcharset177\fprq2 Arial Unicode MS (Hebrew);}
{\f462\fbidi \fswiss\fcharset178\fprq2 Arial Unicode MS (Arabic);}{\f463\fbidi \fswiss\fcharset186\fprq2 Arial Unicode MS Baltic;}{\f464\fbidi \fswiss\fcharset163\fprq2 Arial Unicode MS (Vietnamese);}
{\f465\fbidi \fswiss\fcharset222\fprq2 Arial Unicode MS (Thai);}{\f466\fbidi \fswiss\fcharset238\fprq2 Aptos Display CE;}{\f467\fbidi \fswiss\fcharset204\fprq2 Aptos Display Cyr;}{\f469\fbidi \fswiss\fcharset161\fprq2 Aptos Display Greek;}
{\f470\fbidi \fswiss\fcharset162\fprq2 Aptos Display Tur;}{\f473\fbidi \fswiss\fcharset186\fprq2 Aptos Display Baltic;}{\f474\fbidi \fswiss\fcharset163\fprq2 Aptos Display (Vietnamese);}{\f476\fbidi \fswiss\fcharset238\fprq2 Aptos CE;}
{\f477\fbidi \fswiss\fcharset204\fprq2 Aptos Cyr;}{\f479\fbidi \fswiss\fcharset161\fprq2 Aptos Greek;}{\f480\fbidi \fswiss\fcharset162\fprq2 Aptos Tur;}{\f483\fbidi \fswiss\fcharset186\fprq2 Aptos Baltic;}
{\f484\fbidi \fswiss\fcharset163\fprq2 Aptos (Vietnamese);}{\f496\fbidi \fswiss\fcharset238\fprq2 Segoe UI CE;}{\f497\fbidi \fswiss\fcharset204\fprq2 Segoe UI Cyr;}{\f499\fbidi \fswiss\fcharset161\fprq2 Segoe UI Greek;}
{\f500\fbidi \fswiss\fcharset162\fprq2 Segoe UI Tur;}{\f501\fbidi \fswiss\fcharset177\fprq2 Segoe UI (Hebrew);}{\f502\fbidi \fswiss\fcharset178\fprq2 Segoe UI (Arabic);}{\f503\fbidi \fswiss\fcharset186\fprq2 Segoe UI Baltic;}
{\f504\fbidi \fswiss\fcharset163\fprq2 Segoe UI (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Aptos Display CE;}
{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Aptos Display Cyr;}{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Aptos Display Greek;}{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Aptos Display Tur;}
{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Aptos Display Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Aptos Display (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Aptos CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Aptos Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Aptos Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Aptos Tur;}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Aptos Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Aptos (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green0\blue0;\red0\green0\blue0;}{\*\defchp \fs24\kerning2\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap 
\ql \li0\ri0\sa160\sl278\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa160\sl278\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\kerning2\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}
{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl278\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\kerning2\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 
\snext11 \ssemihidden \sunhideused Normal Table;}{\s15\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe1033\kerning2\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext15 \shidden \ssemihidden \styrsid9071162 Revision;}}{\*\revtbl {Unknown;}}{\*\rsidtbl \rsid2308205\rsid2454426\rsid4604682\rsid6255431\rsid7218855\rsid7488739
\rsid9071162\rsid9131763\rsid9779438\rsid11366518\rsid11814630\rsid11876067\rsid12462162\rsid13384693\rsid14515211\rsid14755341\rsid15162416\rsid15997028\rsid16275325}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0
\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator Mishra, Akriti}{\creatim\yr2025\mo7\dy31\hr13\min53}{\revtim\yr2025\mo8\dy1\hr16\min30}{\version16}{\edmins111}{\nofpages140}{\nofwords34879}{\nofchars198812}{\nofcharsws233225}{\vern103}}
{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot9071162 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\wrapdefault\faauto\rin0\lin0\itap0\pararsid9071162 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe1033\kerning2\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9071162\charrsid9071162 \hich\af4\dbch\af31505\loch\f4 
/************************************************************************************}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9131763 \hich\af4\dbch\af31505\loch\f4 ****\hich\af4\dbch\af31505\loch\f4 *******}{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9071162\charrsid9071162 
\par 
\par \hich\af4\dbch\af31505\loch\f4 SQL program 1 \hich\f4 \endash \loch\f4  
\par \hich\af4\dbch\af31505\loch\f4 Written to apply inclusion exclusion criterias to all the scenarios. 
\par \hich\af4\dbch\af31505\loch\f4 These criterias include checking for continuous coverage and applying metastases restriction (as and when applicable) as well as any scenario specific criterias.
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9071162\charrsid9071162 
\hich\af4\dbch\af31505\loch\f4 ************************************************************************************}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9131763 \hich\af4\dbch\af31505\loch\f4 ***********}{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9071162\charrsid9071162 \hich\af4\dbch\af31505\loch\f4 /}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\par 
\par \hich\af4\dbch\af31505\loch\f4 use medicare;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select Diag_Cancer_Cat_SEER, count (distinct bene_ID) from IN_scenario_ids group by Diag_Cancer_Cat_SEER;
\par \hich\af4\dbch\af31505\loch\f4 --- get age, days to death and end of fu variables;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /**************************************************************************************************\hich\af4\dbch\af31505\loch\f4 /
\par \hich\af4\dbch\af31505\loch\f4 /************ Step 1 }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9071162 \loch\af4\dbch\af31505\hich\f4 \endash \loch\f4  for each scenario,}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4  apply initial inclusion/exclusion criterias before }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9071162 \hich\af4\dbch\af31505\loch\f4 continuous }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 coverage check}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9071162 \hich\af4\dbch\af31505\loch\f4 ing step}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4  }{\rtlch\fcs1 \af4 
\ltrch\fcs0 \f4\kerning0\insrsid9071162 
\par \hich\af4\dbch\af31505\loch\f4 Each scenario has a corresponding unique time frame of diagnoses window}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11876067 \hich\af4\dbch\af31505\loch\f4  that}{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9071162 \hich\af4\dbch\af31505\loch\f4  we consider eligible (based on the \hich\af4\dbch\af31505\loch\f4 guidelines available) }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 ***********/

\par \hich\af4\dbch\af31505\loch\f4 /**********************************************************************************************************************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** PANCREAS ************************************/
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_panc_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_panc_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Bi\hich\af4\dbch\af31505\loch\f4 rth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_panc_ids on IN_panc_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_panc_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Pancreas' and (diag_start_date >= '2017-04-01' a\hich\af4\dbch\af31505\loch\f4 nd diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_panc_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** COLON ***************************************/
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_colon1_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_colon1_id\hich\af4\dbch\af31505\loch\f4 s (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_colon1_ids on IN_colon1_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_colon1_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, \hich\af4\dbch\af31505\loch\f4 Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Colon' and (diag_start_date >= '2016-03-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_colon1_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** Rectum1 ************************************/
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_rectum1_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_rectum1_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin\hich\af4\dbch\af31505\loch\f4 1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_rectum1_ids on IN_rectum1_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_rectum1_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then D\hich\af4\dbch\af31505\loch\f4 eath_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Rectum' and (diag_start_date >= '2016-03-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_rectum1_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 a\hich\af4\dbch\af31505\loch\f4 nd Diag_Clean = 'Y' ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** CERVIX1 ************************************/
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_cervix1_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_cervix1_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4         Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_cervix1_ids on IN_cervix1_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_cervix1_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180\hich\af4\dbch\af31505\loch\f4 , Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'cervix' and (diag_start_date >= '2017-01-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cervix1_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** MYELOMA ************************************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 use medicare;
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_mm_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_mm_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_mm_ids on IN_mm_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_mm_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(YEAR, 1, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year\hich\af4\dbch\af31505\loch\f4 (Death_Date) <> 1900 and Death_Date <= (DATEADD(YEAR, 1, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(YEAR, 1, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Multiple Myeloma' and (diag_start_date >= '2015-11-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_d\hich\af4\dbch\af31505\loch\f4 ate_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*(DATEDIFF(year, Birt\hich\af4\dbch\af31505\loch\f4 h_date, Diag_Start_Date)  >= 66 and DATEDIFF(year, Birth_date, Diag_Start_Date)  < 75);
\par 
\par \hich\af4\dbch\af31505\loch\f4  (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 75);
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** Gallbladder ************************************/
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_gallbladder_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_gallbladder_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti var\hich\af4\dbch\af31505\loch\f4 char(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_g_ids on IN_gallbladder_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_gallbladder_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Dat\hich\af4\dbch\af31505\loch\f4 e)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Gallbladder' and (diag_start_date >= '2016-05-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_gallbladder_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >\hich\af4\dbch\af31505\loch\f4 30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************************** CHOLANG ****************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- 6496;
\par \hich\af4\dbch\af31505\loch\f4 select distinct bene_ID from MCA_assignments 
\par \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Other Digestive Organ' and 
\par \hich\af4\dbch\af31505\loch\f4 (diag_start_date >= '2016-05-01' and diag_start_date <= '2020-04-30')
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 1872 rows;
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_chol_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_chol_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date dat\hich\af4\dbch\af31505\loch\f4 e NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_chol_ids on IN_chol_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_chol_ids
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Cancer_Cat_SEER, a.Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, a.Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, a.Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, a.Diag_Start_D\hich\af4\dbch\af31505\loch\f4 ate)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, a.Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_cll_am a inner join MCA_assignments b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where a.diag_cancer_cat_seer = 'Extrahepatic Cholangea' and (a.diag_start_date >= '2016-05-01' and a.diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_chol_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start\hich\af4\dbch\af31505\loch\f4 _date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** CLL ************************************/
\par \hich\af4\dbch\af31505\loch\f4 --- 37376 ;
\par \hich\af4\dbch\af31505\loch\f4 select distinct bene_ID from MCA_assignments 
\par \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Leukemia' and 
\par \hich\af4\dbch\af31505\loch\f4 (diag_start_date >= '2016-12-01' and diag_start_date <= '2020-04-30')
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 15454 rows;
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_cll_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_cll_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_cll_ids on IN_cll_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_cll_ids
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Cancer_Cat_SEER, a.Di\hich\af4\dbch\af31505\loch\f4 ag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, a.Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(YEAR, 2, a.Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(YEAR, 2, a.Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(YEAR, 2, a.Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_cll_am a inner join MCA_assignments b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where a.diag_cancer_\hich\af4\dbch\af31505\loch\f4 cat_seer = 'cll' and (a.diag_start_date >= '2016-12-01' and a.diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cll_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** BREASt ************************************/
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicar\hich\af4\dbch\af31505\loch\f4 e.dbo.IN_breast_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_breast_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_breast_ids on IN_breast_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_breast_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when\hich\af4\dbch\af31505\loch\f4  year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'breast' and (diag_start_date >= '2016-03-01' and diag_start_\hich\af4\dbch\af31505\loch\f4 date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_breast_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** lung10 **************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_lung10_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_lung10_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(\hich\af4\dbch\af31505\loch\f4 30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_lung10_ids on IN_lung10_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_lung10_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case w\hich\af4\dbch\af31505\loch\f4 hen year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Lung' and (diag_start_date >= '2016-03-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_lung10_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 t\hich\af4\dbch\af31505\loch\f4 hen DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /****************************** Oral cavity & pharynx2 **************************************/
\par \hich\af4\dbch\af31505\loch\f4 /********* NOT metastatic, did not receive surgical resection of tumor, 
\par \hich\af4\dbch\af31505\loch\f4  * DID receive chemotherapy overlapping with radiation, did NOT receive induction chemotherapy 
\par \hich\af4\dbch\af31505\loch\f4  * 
\par \hich\af4\dbch\af31505\loch\f4  * Either the first radiation claim appears prior to the first chemotherapy claim, 
\par \hich\af4\dbch\af31505\loch\f4  * OR if a claim for chemotherapy [docetaxel, paclitaxel, carboplatin, cisplatin, fluorouracil, or cetuximab] occurs 
\par \hich\af4\dbch\af31505\loch\f4  * prior to the first radiation claim then\hich\af4\dbch\af31505\loch\f4  the first radiation claim must be no more than 14 days later. 
\par \hich\af4\dbch\af31505\loch\f4  * ****/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_ocavp2_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_ocavp2_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Cancer_Cat_SEER varchar(30),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 race_rti varchar(1), 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 sex varchar(1),
\par \hich\af4\dbch\af31505\loch\f4             Birth_date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 treat_start_date_PD date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 /* days2death smallint NULL ,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_ocavp2_ids on IN_ocavp2_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_ocavp2_ids
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Cancer_Cat_SEER, Diag_Start_Date,  Diag_Clean, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4 race_rti, sex, Birth_date, Death_date,  treat_start_date_PD, 
\par \hich\af4\dbch\af31505\loch\f4 /*(case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age,*/
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) = 1900 then DATEADD(DAY\hich\af4\dbch\af31505\loch\f4 , 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from MCA_assignments
\par \tab \hich\af4\dbch\af31505\loch\f4 where diag_cancer_cat_seer = 'Oral Cavity and Pharynx' and (diag_start_date >= '2016-08-01' and diag_start_date <= '2020-04-30')
\par \hich\af4\dbch\af31505\loch\f4        ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_ocavp2_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_St\hich\af4\dbch\af31505\loch\f4 art_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4 and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66) 
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /**********************************************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /********************************** Step 2 - Apply }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11876067 \hich\af4\dbch\af31505\loch\f4 continuous \hich\af4\dbch\af31505\loch\f4 parts AB and D }{\rtlch\fcs1 \af4 
\ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 coverage check}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11876067 \hich\af4\dbch\af31505\loch\f4 ing step}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4  }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11876067 \hich\af4\dbch\af31505\loch\f4 for each scenario \loch\af4\dbch\af31505\hich\f4 \endash \loch\f4 
 we require 12 months continuous coverage prior to dx and for the follow up window }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 ****************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /********************************************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- This query creates a new analytical table with some additional fields as well as calculating if a patient had 12 months of "clean" enrollment prior to the "diagnosis date"
\par \hich\af4\dbch\af31505\loch\f4 -- "Clean" enrollment means that a member was eligible and part of FFS Medicare for the 12 months prior to their start date
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for pancreas
\par \hich\af4\dbch\af31505\loch\f4 Drop tab\hich\af4\dbch\af31505\loch\f4 le Medicare.dbo.IN_Panc_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_Panc_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_Panc_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_panc_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start\hich\af4\dbch\af31505\loch\f4 _Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_mo\hich\af4\dbch\af31505\loch\f4 nths
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_\hich\af4\dbch\af31505\loch\f4 Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \tab \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a\hich\af4\dbch\af31505\loch\f4  significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_Panc_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when \hich\af4\dbch\af31505\loch\f4 dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_Panc_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_Panc_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for colon1
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_Colon1_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_Colon1_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_Colon1_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage re\hich\af4\dbch\af31505\loch\f4 cords for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) i\hich\af4\dbch\af31505\loch\f4 n ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days a\hich\af4\dbch\af31505\loch\f4 fter start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_Colon1_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when \hich\af4\dbch\af31505\loch\f4 dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_Colon1_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_Colon1_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for RECtUM1
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_rectum1_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_rectum1_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_rectum1_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum1_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >3\hich\af4\dbch\af31505\loch\f4 0) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as\hich\af4\dbch\af31505\loch\f4  Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1\hich\af4\dbch\af31505\loch\f4 ) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar y\hich\af4\dbch\af31505\loch\f4 ear, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_rectum1_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo\hich\af4\dbch\af31505\loch\f4 .MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_rectum1_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_rectum1_Cov whe\hich\af4\dbch\af31505\loch\f4 re Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for cervix1
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_cervix1_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_cervix1_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varch\hich\af4\dbch\af31505\loch\f4 ar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_cervix1_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cervix1_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when\hich\af4\dbch\af31505\loch\f4  year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Month\hich\af4\dbch\af31505\loch\f4 s
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_\hich\af4\dbch\af31505\loch\f4 ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \tab \hich\af4\dbch\af31505\loch\f4 -- We are not allowing fo\hich\af4\dbch\af31505\loch\f4 r any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_cervix1_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on \hich\af4\dbch\af31505\loch\f4 pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cervix1_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cervix1_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for MM
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_mm_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_mm_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_Gen\hich\af4\dbch\af31505\loch\f4 eral_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDE\hich\af4\dbch\af31505\loch\f4 X IN_Cov_a ON Medicare.dbo.IN_mm_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 365;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) \hich\af4\dbch\af31505\loch\f4 <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_mo\hich\af4\dbch\af31505\loch\f4 nths
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_\hich\af4\dbch\af31505\loch\f4 Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \tab \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_mm_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_D\hich\af4\dbch\af31505\loch\f4 ata_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_Cov 
\par \hich\af4\dbch\af31505\loch\f4 where Diag_Clean = 'Y'; and partd_Clean = 'Y'
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*--mm1
\par \hich\af4\dbch\af31505\loch\f4 select\hich\af4\dbch\af31505\loch\f4  count (distinct bene_ID) from IN_mm_Cov where DATEDIFF(year, Birth_date, Diag_Start_Date) <= 75 and Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_Cov where DATEDIFF(year, Birth_date, Diag_Start_Date) <= 75 and Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 --mm2
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_Cov where DATEDIFF(year, Birth_date, Diag_Start_Date) > 75 and Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_Cov where DATEDIFF(year, Birth_date, Diag_Start_Date) > 75 and Diag_Clean \hich\af4\dbch\af31505\loch\f4 = 'Y' and partd_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for gallbladder
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_gallbladder_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_gallbladder_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_gallbladder_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_St\hich\af4\dbch\af31505\loch\f4 art_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_mo\hich\af4\dbch\af31505\loch\f4 nths
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_\hich\af4\dbch\af31505\loch\f4 Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- W\hich\af4\dbch\af31505\loch\f4 e are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_gallbladder_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo\hich\af4\dbch\af31505\loch\f4 .MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_gallbladder_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_gallbladder_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for cholangea
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_chol_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_chol_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTER\hich\af4\dbch\af31505\loch\f4 ED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_chol_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- C\hich\af4\dbch\af31505\loch\f4 hecking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(datead\hich\af4\dbch\af31505\loch\f4 d(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_chol_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov\hich\af4\dbch\af31505\loch\f4 _months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.ef\hich\af4\dbch\af31505\loch\f4 fmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_chol_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_chol_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for CLL
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_cll_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_cll_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_cll ON Medicare.dbo.IN_cll_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 selec\hich\af4\dbch\af31505\loch\f4 t @DaysPast = 730;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as min\hich\af4\dbch\af31505\loch\f4 yr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1\hich\af4\dbch\af31505\loch\f4 ) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar y\hich\af4\dbch\af31505\loch\f4 ear, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_cll_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_\hich\af4\dbch\af31505\loch\f4 Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cll_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cll_Cov where Diag_Clea\hich\af4\dbch\af31505\loch\f4 n = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for breast
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_breast_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_breast_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_breast_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_breast_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Star\hich\af4\dbch\af31505\loch\f4 t_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as\hich\af4\dbch\af31505\loch\f4  Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab \hich\af4\dbch\af31505\loch\f4 ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prio\hich\af4\dbch\af31505\loch\f4 r to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 in\hich\af4\dbch\af31505\loch\f4 sert into Medicare.dbo.IN_breast_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_breast_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_breast_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par ---------------------------------------------
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for lung10
\par ---------------------------------------------
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_lung10_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_lung10_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_lung10_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_sta\hich\af4\dbch\af31505\loch\f4 rt_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_St\hich\af4\dbch\af31505\loch\f4 art_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(C\hich\af4\dbch\af31505\loch\f4 ase when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death\hich\af4\dbch\af31505\loch\f4  Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab \hich\af4\dbch\af31505\loch\f4 ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R', 'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(\hich\af4\dbch\af31505\loch\f4 d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_lung10_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then '\hich\af4\dbch\af31505\loch\f4 Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_lung10_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_lung10_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Create table for oral cavity and pharynx2
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_ocavp2_Cov;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_ocavp2_Cov (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varch\hich\af4\dbch\af31505\loch\f4 ar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Birth_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 partd_Clean varchar(1) NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX IN_Cov_a ON Medicare.dbo.IN_ocavp2_Cov;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- Checking 12 months of enrollment prior to start dates and coverage for entire costs period
\par \hich\af4\dbch\af31505\loch\f4 declare @DaysPast  smallint;
\par \hich\af4\dbch\af31505\loch\f4 select @DaysPast = 180;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with pts as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select *
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_ids
\par \tab \hich\af4\dbch\af31505\loch\f4 where (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (treat_start_date_PD >= Diag_Start_Date) 
\par \tab \hich\af4\dbch\af31505\loch\f4        and (DATEDIFF(year, Birth_date, Diag_Start_Date) \hich\af4\dbch\af31505\loch\f4 >= 66)
\par \hich\af4\dbch\af31505\loch\f4 )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*
\par \hich\af4\dbch\af31505\loch\f4 (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) as days2death, DATEDIFF(year, Birth_date, Diag_Start_Date) as age
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************** check what all values part ab and d can take *********/
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- Checking coverage records for the 12 months prior to the diagnosis date and 180 days after
\par \hich\af4\dbch\af31505\loch\f4 , diag_coverage as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4     ,min(ab.BENE_ENROLLMT_REF_YR ) as minyr
\par \hich\af4\dbch\af31505\loch\f4    --Number of Years
\par \hich\af4\dbch\af31505\loch\f4     ,count(distinct BENE_ENROLLMT_REF_YR) as Covered_years_cnt
\par \hich\af4\dbch\af31505\loch\f4    --Months covered for Part A and B
\par \hich\af4\dbch\af31505\loch\f4    ,sum(Case when MDCR_ENTLMT_BUYIN_IND in ('3','C') then 1 else 0 end) as cov_months
\par \hich\af4\dbch\af31505\loch\f4    --Number of Months
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,DATEDIFF(month,dateadd(year,-1,Diag_Start_Date),
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 (Case when datead\hich\af4\dbch\af31505\loch\f4 d(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then Death_Date else dateadd(d,@DaysPast ,Diag_Start_Date) end)) + 1 as Effmonths
\par \hich\af4\dbch\af31505\loch\f4    --HMO Indicator
\par \hich\af4\dbch\af31505\loch\f4    ,sum(case when HMO_IND<>'0' then 1 else 0 end) as hmo_months
\par \hich\af4\dbch\af31505\loch\f4    --Medicaid Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case\~when DUAL_STUS_CD<>'NA' then 1 else 0 end) as mcaid_months
\par \hich\af4\dbch\af31505\loch\f4  \tab --Death Indicator
\par \hich\af4\dbch\af31505\loch\f4  \tab ,max(case when year(Death_Date)=ab.BENE_ENROLLMT_REF_YR then 1 else 0 end) as death_ind
\par \hich\af4\dbch\af31505\loch\f4  \tab ,sum(case when (SUBSTRING ( PTD_CNTRCT_ID, 1, 1 ) in ('E', 'H', 'R',\hich\af4\dbch\af31505\loch\f4  'S')) then 1 
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else 0 end) as d_months
\par \tab \hich\af4\dbch\af31505\loch\f4 from Medicare.dbo.MC_FFS_MBSF as ab\tab inner join pts on ab.BENE_ID=pts.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 where datefromparts(BENE_ENROLLMT_REF_YR,month_no,1) between 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 eomonth(dateadd(month,-1,dateadd(year,-1,Diag_Start_Date))) --- one year prior to start date 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4  and (Case when dateadd(d,@DaysPast ,Diag_Start_Date)>Death_Date and Death_Date<>'1900-01-01' then eomonth(Death_Date)  --- date of death
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 else eomonth(dateadd(d,@DaysPast ,Diag_Start_Date)) end) --- or X days after start date
\par \hich\af4\dbch\af31505\loch\f4      group by ab.BENE_ID
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Diag_Start_Date
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 ,Death_Date
\par \hich\af4\dbch\af31505\loch\f4 )
\par \hich\af4\dbch\af31505\loch\f4 -- Inserting all data into new table
\par \hich\af4\dbch\af31505\loch\f4 -- We are not allowing for any MA (HMO) enrollment within the same calendar year, this is the strictest view possible but doesnt have a significant impact on counts
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_ocavp2_Cov
\par \hich\af4\dbch\af31505\loch\f4 select pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and d\hich\af4\dbch\af31505\loch\f4 c.hmo_months=0 then 'Y' else 'N' end) as Diag_Clean
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                       then 'Y' else 'N' end) as partd_Clean
\par \hich\af4\dbch\af31505\loch\f4 from pts 
\par \tab \hich\af4\dbch\af31505\loch\f4 left join Medicare.dbo.MC_Data_Set_1 as dsb on pts.BENE_ID=dsb.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 left join diag_coverage as dc on pts.BENE_ID=dc.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4 group by pts.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Diag_Start_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Birth_Date
\par \tab \hich\af4\dbch\af31505\loch\f4 ,pts.Death_Date 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.cov_months>=dc.effmonths and dc.hmo_months=0 then 'Y' else 'N' end) 
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(Case when dc.d_months>=dc.effmonths                    \hich\af4\dbch\af31505\loch\f4    then 'Y' else 'N' end) 
\par \hich\af4\dbch\af31505\loch\f4 ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- ( rows affected)
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_ocavp2_Cov where Diag_Clean = 'Y'
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_ocavp2_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /**********************************************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /************************************ Step 3 - Check Metastasis }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid7488739 
\par \hich\af4\dbch\af31505\loch\f4 Depending on the scenario, we require stage4 patients, early stage patients or all patients regardless of staging. }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 
*******************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /********************************************************************************************************************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_panc_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_panc_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX pb2 ON Medicare.dbo.IN_panc_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_panc_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_Panc_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean\hich\af4\dbch\af31505\loch\f4  = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1month before or after dx date
\par \hich\af4\dbch\af31505\loch\f4     IN_panc_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_panc_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1month before or after dx date
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_panc_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_panc_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1month before or after dx date
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_panc_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT\hich\af4\dbch\af31505\loch\f4 , CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_panc_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_panc_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab \hich\af4\dbch\af31505\loch\f4    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_panc_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_panc_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_panc_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month pri\hich\af4\dbch\af31505\loch\f4 or to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_panc_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_panc_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    where (dx in ('1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980', '1981', '1981', '1982', '1983', '1984', '1984', '1985', 
\par \hich\af4\dbch\af31505\loch\f4    '1985', '1986', '1987', '19881',  '19882',  '19889', 'C7800',  'C781', 'C782', 'C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900', 
\par \hich\af4\dbch\af31505\loch\f4     'C7\hich\af4\dbch\af31505\loch\f4 911',  'C7919',  'C792', 'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par \hich\af4\dbch\af31505\loch\f4               )
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_panc_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_panc_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_panc_meta_benes 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*IN_colon1_checkmeta
\par \hich\af4\dbch\af31505\loch\f4 IN_colon1_meta_benes
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 */
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /************** colon 1 ***********/
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_Colon1_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_Colon1_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c2 ON Medicare.dbo.IN_Colon1_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_Colon1_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_Colon1_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1 yr prior and up to end fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 sel\hich\af4\dbch\af31505\loch\f4 ect distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_Colon1_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Colon1_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP\hich\af4\dbch\af31505\loch\f4 , OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Colon1_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_Colon1_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_Colon1_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_Colon1_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that t\hich\af4\dbch\af31505\loch\f4 he meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Colon1_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 se\hich\af4\dbch\af31505\loch\f4 lect distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_Colon1_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    \tab 
   where (dx in (/*'1960',  '1961',  '1962', '1963', '1965', '1966', '1968', '1969',*/ '1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980',    '1981', '1981', '1982', '1983', '1984', '1984', '1985', '1985', '1986',
\hich\af4\dbch\af31505\loch\f4  '1987', '19881',  '19882',  '19889', /* 'C770', 'C771', 'C772', 'C773', 'C774',    'C775', 'C778', 'C779',*/ 'C7800',  'C781', \hich\af4\dbch\af31505\loch\f4 
'C782', 'C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900',  'C7911',  'C7919',  'C792',    'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par 
\par \hich\af4\dbch\af31505\loch\f4       and  ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30)))
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_Colon1_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Da\hich\af4\dbch\af31505\loch\f4 te, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_Colon1_meta_benes 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /************** rectum1 ***********/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_rectum1_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_rectum1_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c2 ON Medicare.dbo.IN_rectum1_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_rectum1_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 th\hich\af4\dbch\af31505\loch\f4 en DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_rectum1_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1 yr prior and up to end fu
\par \hich\af4\dbch\af31505\loch\f4     IN_rectum1_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum1_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_rectum1_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum1_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_D\hich\af4\dbch\af31505\loch\f4 T >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_rectum1_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum1_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_rectum1_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag\hich\af4\dbch\af31505\loch\f4 _start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_rectum1_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_rectum1_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_rectum1_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after \hich\af4\dbch\af31505\loch\f4  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_rectum1_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_rectum1_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    \tab 
   where (dx in (/*'1960',  '1961',  '1962', '1963', '1965', '1966', '1968', '1969',*/ '1970',  '1971', '1972', '1973', '1974', /*'1975',*/ '1976', '1977', '1978', '1978', '1980',    '1981', '1981', '1982', '1983', '1984', '1984', '1985', '1985', '19
\hich\af4\dbch\af31505\loch\f4 86', '1987', '19881',  '19882',  '19889', /* 'C770', 'C771', 'C772', 'C773', 'C774',    'C775'\hich\af4\dbch\af31505\loch\f4 
, 'C778', 'C779',*/ 'C7800',  'C781', 'C782', 'C7839',  'C784', /*'C785',*/ 'C786', 'C787', 'C787', 'C7889',  'C7900',  'C7911',  'C7919',  'C792',    'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')

\par 
\par \hich\af4\dbch\af31505\loch\f4       and  ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30)))
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_rectum1_meta_bene\hich\af4\dbch\af31505\loch\f4 s
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum1_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_rectum1_meta_benes 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /************** rectum2 ***********/
\par \hich\af4\dbch\af31505\loch\f4 ------------ get surgery date
\par \hich\af4\dbch\af31505\loch\f4 -- look as far as 200 days after end fu. because lets say someone had trt initiation on last day of fu then we want
\par \hich\af4\dbch\af31505\loch\f4 -- to check 200 days from then for presence of surgery. will apply specific time restriction later once we hve trt init date 
\par 
\par \hich\af4\dbch\af31505\loch\f4 --drop table Medicare.dbo.IN_rectum2_nonmeta_benes_f 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_rectum2_nonmeta_benes_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt d\hich\af4\dbch\af31505\loch\f4 ate NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 surg_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c3 ON Medicare.dbo.IN_rectum2_nonmeta_benes_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_rectum2_checksurg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.Death_Date, (DATEADD(YEAR, -1, a.Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(a.Death_Date) = 1900 then DATEADD(DAY, 180, a.Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(a.Death_Date) <> 1900 and a.Death_Date <= (DATEADD(DAY, 180, a.Diag_Start_Date)) then a.Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, a.Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_rectum1_Cov a left join IN_rectum1_meta_benes b on a.bene_ID = b.bene_ID where b.bene_ID is null
\par \hich\af4\dbch\af31505\loch\f4        and a.Diag_Clean = 'Y' and a.partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ),
\par \tab 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join MC_FFS_IP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incex\hich\af4\dbch\af31505\loch\f4 cl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= DATEADD(DAY, 200, end_fu)) and (icd_proc_dt >= Diag_Start_Date)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Rectum2' and c.Code_for = 'Rectal surgery'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_SNF as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_co\hich\af4\dbch\af31505\loch\f4 des_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= DATEADD(DAY, 200, end_fu)) and (icd_proc_dt >= Diag_Start_Date)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Rectum2'  and c.Code_for = 'Rectal surgery'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= DATEADD(DAY, 200, end_fu)) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS') and site = 'Rectum2' and c.Code_for = 'Rectal surgery'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_OP_I as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join MC_FFS_OP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= DATEADD(DAY, 200, end_fu)) and (icd_proc_dt >= Diag_Start_Date)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC') and site = 'Rectum2' and c.Code_for = 'Rectal surgery'          
\hich\af4\dbch\af31505\loch\f4   \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID,  b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= DATEADD(DAY, 200, end_fu)) and (REV_CNTR_DT >= Diag_Start_Date) ) and  (c.code_type = 'HCPCS')  and site = 'Rectum2' and c.Code_for = 'Rectal surgery'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LIN\hich\af4\dbch\af31505\loch\f4 
E_1ST_EXPNS_DT <= DATEADD(DAY, 200, end_fu)) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS') and site = 'Rectum2' and c.Code_for = 'Rectal surgery'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR\hich\af4\dbch\af31505\loch\f4 _DT <= DATEADD(DAY, 200, end_fu)) and (REV_CNTR_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS')   and site = 'Rectum2' and c.Code_for = 'Rectal surgery'          \tab 

\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= DATEADD(DAY, 200, end_fu)) and (REV_CNTR_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS')   and site = 'Rectum2' and c.Code_for = 'Rectal surgery'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Rectum2_4surg as (
\par \hich\af4\dbch\af31505\loch\f4            select distinct BENE_\hich\af4\dbch\af31505\loch\f4 ID, clm_id,  CLM_DT from IN_Rectum2_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum2_SNF) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum2_PH) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum2_OP_I) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum2_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum2_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum2_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct \hich\af4\dbch\af31505\loch\f4 BENE_ID, clm_id,  CLM_DT from IN_Rectum2_HOSPC)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get surgeries procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum2_surg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, min(CLM_DT) as surg_dt from IN_Rectum2_4surg 
\par \tab \hich\af4\dbch\af31505\loch\f4 group by bene_id
\par \hich\af4\dbch\af31505\loch\f4  )
\par \hich\af4\dbch\af31505\loch\f4 --select count (distinct bene_ID) from IN_Rectum2_surg;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_rectum2_nonmeta_benes_f
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.Death_Date, a.prior_dt, a.end_fu, b.surg_dt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_rectum2_checksurg a left join IN_Rectum2_surg b on a.bene_ID = b.bene_ID ;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --select count (distinct bene_ID) from IN_rectum2_nonmeta_benes_f where surg_dt is not NULL;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /************** cervix1 ***********/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_cervix1_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table M\hich\af4\dbch\af31505\loch\f4 edicare.dbo.IN_cervix1_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c2 ON Medicare.dbo.IN_cervix1_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_cervix1_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_cervix1_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and par\hich\af4\dbch\af31505\loch\f4 td_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1 yr prior and up to end fu
\par \hich\af4\dbch\af31505\loch\f4     IN_cervix1_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cervix1_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_cervix1_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cervix1_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_cervix1_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cervix1_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)     \hich\af4\dbch\af31505\loch\f4        
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_cervix1_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_cervix1_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_cervix1_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_cervix1_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_cervix1_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_cervix1_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    \tab 
   where (dx in (/*'1960',  '1961',  '1962', '1963', '1965', '1966', '1968', '1969',*/ '1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980',    '1981', '1981', '1982', '1983', '1\hich\af4\dbch\af31505\loch\f4 
984', '1984', '1985', '1985', '1986', '1987', '19881',  '19882',  '19889', /* 'C770', 'C771', 'C772', 'C773', 'C774',    'C775', 'C778', 'C779',*/ 'C7800',  'C781', 'C782', 'C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900',  'C7911',  'C
\hich\af4\dbch\af31505\loch\f4 7919',  'C792',    'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par 
\par \hich\af4\dbch\af31505\loch\f4       and  ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30)))
\par \tab \hich\af4\dbch\af31505\loch\f4    group by ben\hich\af4\dbch\af31505\loch\f4 e_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- of benes with 2 or more claims with meta code, how many have an IP visit with a dx for cancer 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_cervix1_m_hv_IP as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct\tab a.CLM_FROM_DT, a.CLM_THRU_DT, a.clm_id, a.dx, b.BENE_ID, b.diag_start_date, b.Death_Date, b.prior_dt, b.end_fu 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 from  IN_cervix1_IP a inner join IN_cervix1_meta_s1 b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4    where (a.dx in ('C53',\tab 'C530',\tab 'C531',\tab 'C538',\tab 'C539',\tab '180',\tab '1800',\tab '1801\hich\af4\dbch\af31505\loch\f4 ',\tab '1808',\tab '1809'))
\par \tab \hich\af4\dbch\af31505\loch\f4 ),
\par \hich\af4\dbch\af31505\loch\f4      
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes without an IP visit
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_cervix1_m_chck_OP4 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct\tab a.BENE_ID, a.diag_start_date, a.Death_Date, a.prior_dt, a.end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from  IN_cervix1_meta_s1 a left join IN_cervix1_m_hv_IP b on a.BENE_ID = b.bene_id where b.bene_id is null
\par \tab \hich\af4\dbch\af31505\loch\f4 ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that have 2 or more OP claims with a dx for cancer
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_cervix1_m_chck_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct\tab b.BENE_ID, b.diag_start_date, b.Death_Date, b.prior_dt, b.end_fu, /*a.CLM_FROM_DT, a.CLM_THRU_DT, a.clm_id,*/ count(distinct a.clm_id) as clms/*, a.dx */
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 from  IN_cervix1_OP a inner join IN_cervix1_m_chck_OP4 b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4    where (a.dx in ('C53',\tab 'C530',\tab 'C531',\tab 'C538\hich\af4\dbch\af31505\loch\f4 ',\tab 'C539',\tab '180',\tab '1800',\tab '1801',\tab '1808',\tab '1809'))
\par \hich\af4\dbch\af31505\loch\f4    group by b.bene_id,b.diag_start_date, b.Death_Date, b.prior_dt, b.end_fu having count(distinct a.clm_id) >=2
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 --------- get benes with 2 or more OP claims. with the claim dates 
\par \hich\af4\dbch\af31505\loch\f4 IN_cervix1_m_chck_OP_d as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct\tab b.BENE_ID, b.diag_start_date, b.Death_Date, b.prior_dt, b.end_fu, a.CLM_FROM_DT, a.CLM_THRU_DT, a.clm_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 from  IN_cervix1_OP a inner join IN_cervix1_m_chck_OP b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4       where (a.dx in ('C53',\tab 'C530',\tab 'C53\hich\af4\dbch\af31505\loch\f4 1',\tab 'C538',\tab 'C539',\tab '180',\tab '1800',\tab '1801',\tab '1808',\tab '1809'))
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ---------- keep first and last claim date for benes with 2 or more OP claims with a dx for cancer. and check distance btwn them   
\par \hich\af4\dbch\af31505\loch\f4  RowNum_a as (
\par \hich\af4\dbch\af31505\loch\f4     select BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, clm_id,
\par \hich\af4\dbch\af31505\loch\f4            row_number() over(partition by bene_id order by CLM_FROM_DT) as RowNum
\par \hich\af4\dbch\af31505\loch\f4         from IN_cervix1_m_chck_OP_d
\par \hich\af4\dbch\af31505\loch\f4   ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4  fir as (
\par \hich\af4\dbch\af31505\loch\f4  \tab \hich\af4\dbch\af31505\loch\f4    select BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, clm_id from RowNum_a where RowNum = 1
\par \hich\af4\dbch\af31505\loch\f4  \tab ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4  RowNum_d as (
\par \hich\af4\dbch\af31505\loch\f4     select BENE_ID, diag_start_date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, clm_id,
\par \hich\af4\dbch\af31505\loch\f4            row_number() over(partition by bene_id order by CLM_FROM_DT desc) as RowNum
\par \hich\af4\dbch\af31505\loch\f4         from IN_cervix1_m_chck_OP_d
\par \hich\af4\dbch\af31505\loch\f4   ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4  ls as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select BENE_ID, diag_start_date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, clm_id from RowNum_d where RowNum = 1
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4   benes_2\hich\af4\dbch\af31505\loch\f4 op_30 as (
\par \hich\af4\dbch\af31505\loch\f4    select distinct a.bene_ID, a.diag_start_date, a.Death_Date, a.prior_dt, a.end_fu from fir a left join ls b on a.bene_id = b.bene_id 
\par \hich\af4\dbch\af31505\loch\f4     where DATEDIFF(day, a.CLM_FROM_DT, b.CLM_FROM_DT) >= 30
\par \hich\af4\dbch\af31505\loch\f4    ),
\par \hich\af4\dbch\af31505\loch\f4    
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with meta per algo
\par 
\par \hich\af4\dbch\af31505\loch\f4   benes_meta as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu from IN_cervix1_m_hv_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, diag_start_date,Death_Date, prior_dt, end_fu from benes_2op_30) 
\par \hich\af4\dbch\af31505\loch\f4   )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_cervix1_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from benes_meta;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_cervix1_meta_benes 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /********************** GALLBLADDER ******************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_gallbladder_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_gallbladder_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Dat\hich\af4\dbch\af31505\loch\f4 e date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX gb ON Medicare.dbo.IN_gallbladder_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_gallbladder_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_gallbladder_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1 yr prior and up to end fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_IP\hich\af4\dbch\af31505\loch\f4  as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_gallbladder_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_gallbladder_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine\hich\af4\dbch\af31505\loch\f4  claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_gallbladder_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_gallbladder_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_gallbladder_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_gallbladder_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_gallbladder_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    where (dx in ('1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980', '1981', '1981', '1982', '1983', '1984', '1984', '1985', 
\par \hich\af4\dbch\af31505\loch\f4    '1985', '1986', '1987', '19881',  '19882', \hich\af4\dbch\af31505\loch\f4  '19889', 'C7800',  'C781', 'C782', 'C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900', 
\par \hich\af4\dbch\af31505\loch\f4     'C7911',  'C7919',  'C792', 'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par \hich\af4\dbch\af31505\loch\f4       and  ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30)))
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_gallbladder_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select B\hich\af4\dbch\af31505\loch\f4 ENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_gallbladder_meta_benes 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /***************************** CHOLANGEA **************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_chol_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_chol_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX pb2 ON Medicare.dbo.IN_chol_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_chol_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_cho\hich\af4\dbch\af31505\loch\f4 l_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1month before or after dx date
\par \hich\af4\dbch\af31505\loch\f4     IN_chol_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1month before or after dx date
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_chol_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene\hich\af4\dbch\af31505\loch\f4 _id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1month before or after dx date
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_chol_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_chol_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_chol_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_chol_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_chol_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with\hich\af4\dbch\af31505\loch\f4  2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_chol_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_chol_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    where (dx in ('1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980', '1981', '1981', '1982', '1983', '1984', '1984', '1985', 
\par \hich\af4\dbch\af31505\loch\f4    '1985', '1986', '1987', '19881',  '19882',  '19889', 'C7800',  'C781', 'C782', '\hich\af4\dbch\af31505\loch\f4 C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900', 
\par \hich\af4\dbch\af31505\loch\f4     'C7911',  'C7919',  'C792', 'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par \hich\af4\dbch\af31505\loch\f4               )
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_chol_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_chol_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select c\hich\af4\dbch\af31505\loch\f4 ount (distinct bene_ID) from IN_chol_meta_benes 
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /************** breast ***********/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_breast_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_breast_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c2 ON Medicare.dbo.IN_breast_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_breast_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_breast_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1m prior and up to 1m a\hich\af4\dbch\af31505\loch\f4 fr
\par \hich\af4\dbch\af31505\loch\f4     IN_breast_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_breast_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1m prior and up to 1m afr
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_breast_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_breast_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4       where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1m prior and up to 1m afr
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_breast_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_breast_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_d\hich\af4\dbch\af31505\loch\f4 ate) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_breast_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_breast_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_breast_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, pr\hich\af4\dbch\af31505\loch\f4 ior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_breast_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_breast_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_breast_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    \tab 
   where (dx in (/*'1960',  '1961',  '1962', '1963', '1965', '1966', '1968', '1969',*/ '1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980',    '1981', '1981', '1982', '1983', '1984', '1984', '1985', '1985', '1986',
\hich\af4\dbch\af31505\loch\f4  '1987', /*'19881',*/  '19882',  '19889', /* 'C770', 'C771', 'C772', 'C773', 'C774',    'C775', 'C778', 'C779',*/ 'C7800',  'C\hich\af4\dbch\af31505\loch\f4 
781', 'C782', 'C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900',  'C7911',  'C7919',  'C792',    'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  /*'C7981',*/  'C7982',  'C7989'))
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_breast_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_breast_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_breast_meta\hich\af4\dbch\af31505\loch\f4 _benes 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- NON MEtA BR
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_breast_nonmeta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_breast_nonmeta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c2n ON Medicare.dbo.IN_breast_nonmeta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_breast_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_breast_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_breast_nonmeta_benes
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.Death_Date, a.prio\hich\af4\dbch\af31505\loch\f4 r_dt, a.end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_breast_checkmeta  a left join IN_breast_meta_benes b on a.bene_id = b.bene_id where b.bene_id is null;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_breast_nonmeta_benes 
\par 
\par 
\par 
\par -----------------------------------------
\par \hich\af4\dbch\af31505\loch\f4 ----------- LUNG10;
\par -----------------------------------------
\par \hich\af4\dbch\af31505\loch\f4 use Medicare;
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_lung10_meta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_lung10_meta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c2 ON Medicare.dbo.IN_lung10_meta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 wi\hich\af4\dbch\af31505\loch\f4 th IN_lung10_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_lung10_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par ---\hich\af4\dbch\af31505\loch\f4 ----- get IP dxs for benes during 1m prior and up to 1m afr
\par \hich\af4\dbch\af31505\loch\f4     IN_lung10_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1m prior and up to 1m afr
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_lung10_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, \hich\af4\dbch\af31505\loch\f4 CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4       where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1m prior and up to 1m afr
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_lung10_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_checkmeta as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30))              \tab 
\par 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_lung10_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_lung10_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, \hich\af4\dbch\af31505\loch\f4 end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_lung10_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_lung10_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_lung10_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu, count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_lung10_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    where dx in \hich\af4\dbch\af31505\loch\f4 (/*'1960',  '1961',  '1962', '1963', '1965', '1966', '1968', '1969',*/ /*'1970', */ '1971', /*'1972', '1973',*/ '1974', '1975', '1976', '1977', '1978', '1978', '1980', 

\par \hich\af4\dbch\af31505\loch\f4    '1981', '1981', '1982', '1983', '1984', '1984', '1985', '1985', '1986', '1987', '19881',  '19882',  '19889', /* 'C770', 'C771', 'C772', 'C773', 'C774', 
\par \hich\af4\dbch\af31505\loch\f4    'C775', 'C778', 'C779',*/ /*'C7800',*/  'C781', /*'C782', 'C7839', */ 'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C7900',  'C7911',  'C7919',  'C792', 
\par \hich\af4\dbch\af31505\loch\f4    'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct c\hich\af4\dbch\af31505\loch\f4 lm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_lung10_meta_benes
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_meta_s1;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_lung10_meta_benes; 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /********************** Oral Cavity and pharynx2 ******************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_ocavp2_nonmeta_benes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_ocavp2_nonmeta_benes (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Sta\hich\af4\dbch\af31505\loch\f4 rt_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Death_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX gb ON Medicare.dbo.IN_ocavp2_nonmeta_benes;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_ocavp2_checkmeta as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, Death_Date, (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt,
\par \hich\af4\dbch\af31505\loch\f4   (case when year(Death_Date) = 1900 then DATEADD(DAY, 180, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4       when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(DAY, 180, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4       else (DATEADD(DAY, 180, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4       end) as end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_ocavp2_Cov
\par \hich\af4\dbch\af31505\loch\f4   where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during 1 yr prior and up to end fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 sel\hich\af4\dbch\af31505\loch\f4 ect distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT/*, CLM_ADMSN_DT*/
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkmeta as a inner join MC_FFS_IP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)              \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_OP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkmeta as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dxs for benes during 1 yr prior and up to end fu
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_ocavp2_PH as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.dx, CLM_FROM_DT, CLM_THRU_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkmeta as a inner join MC_\hich\af4\dbch\af31505\loch\f4 FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (CLM_FROM_DT <= end_fu) and (CLM_FROM_DT >= prior_dt)            
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims from IP, OP and PH
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_ocavp2_icdclms as (
\par \hich\af4\dbch\af31505\loch\f4   \tab    select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_ocavp2_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_ocavp2_OP) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  diag_start_date, Death_Date, prior_dt, end_fu, CLM_FROM_DT, CLM_THRU_DT, dx from IN_ocavp2_PH)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes with 2 or more claims such that the meta code appears. checking btwn a month prior to dx date and a month after  
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_ocavp2_meta_s1 as ( 
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID, diag_start_date, Death_Date, prior_dt, end_fu\hich\af4\dbch\af31505\loch\f4 , count(distinct clm_id) as clms from
\par \tab \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_icdclms
\par \tab \hich\af4\dbch\af31505\loch\f4    where (dx in (/*'1960',  '1961',  '1962', '1963', '1965', '1966', '1968', '1969',*/ '1970',  '1971', '1972', '1973', '1974', '1975', '1976', '1977', '1978', '1978', '1980', 
\par \hich\af4\dbch\af31505\loch\f4    '1981', '1981', '1982', '1983', '1984', '1984', '1985', '1985', '1986', '1987', '19881',  '19882',  '19889', /* 'C770', 'C771', 'C772', 'C773', 'C774', 
\par \hich\af4\dbch\af31505\loch\f4    'C775', 'C778', 'C779',*/ 'C7800',  'C781', 'C782', 'C7839',  'C784', 'C785', 'C786', 'C787', 'C787', 'C7889',  'C\hich\af4\dbch\af31505\loch\f4 7900',  'C7911',  'C7919',  'C792', 
\par \hich\af4\dbch\af31505\loch\f4    'C7931',  'C7932',  'C7949',  'C7951',  'C7952',  'C7960',  'C7970',  'C7981',  'C7982',  'C7989')
\par \hich\af4\dbch\af31505\loch\f4       and  ((DATEDIFF(day, CLM_FROM_DT, diag_start_date) <= 30) and (DATEDIFF(day, diag_start_date, CLM_FROM_DT) <= 30)))
\par \tab \hich\af4\dbch\af31505\loch\f4    group by bene_id, diag_start_date, Death_Date, prior_dt, end_fu having count (distinct clm_id) >=2
\par \tab \hich\af4\dbch\af31505\loch\f4 )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_ocavp2_nonmeta_benes
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.Death_Date, a.prior_dt, a.end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkmeta a left joi\hich\af4\dbch\af31505\loch\f4 n IN_ocavp2_meta_s1 b on a.bene_id = b.bene_id where b.bene_id is null;
\par \hich\af4\dbch\af31505\loch\f4               
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_ocavp2_nonmeta_benes 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4  
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11366518 \hich\af4\dbch\af31505\loch\f4 /******************* \hich\af4\dbch\af31505\loch\f4 I\hich\af4\dbch\af31505\loch\f4 n the }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid4604682 
\hich\af4\dbch\af31505\loch\f4 following}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11366518 \hich\af4\dbch\af31505\loch\f4  part}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid4604682 \hich\af4\dbch\af31505\loch\f4 s}{\rtlch\fcs1 \af4 
\ltrch\fcs0 \f4\kerning0\insrsid11366518 \hich\af4\dbch\af31505\loch\f4  of this file, we apply the remaining scenario specific criterias *******************************************************************************/}{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9779438 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11366518 
\par 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 /************************************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /****************************************Step 4 a - }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11814630 \hich\af4\dbch\af31505\loch\f4 we require }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 LACK OF SURGERY }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid11814630 \hich\af4\dbch\af31505\loch\f4 for the following scenarios }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 ********************************/
\par \hich\af4\dbch\af31505\loch\f4 /**********************************************************************************************************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 proc import datafile = 'M:\\Mitchell\\Incentives\\Documentation\\Incentives_Cohort Creation_Codes.xlsx'
\par \hich\af4\dbch\af31505\loch\f4 out = medserv.IN_codes_4incexcl 
\par \hich\af4\dbch\af31505\loch\f4 dbms = xlsx replace; sheet = "Codes" ;
\par \hich\af4\dbch\af31505\loch\f4 run;
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ****** need checking of procedures - no procs during 6m from dx or 1 month prior;
\par \hich\af4\dbch\af31505\loch\f4 Create table IN_colon1_elig(
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Star\hich\af4\dbch\af31505\loch\f4 t_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX c1 ON IN_colon1_elig;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- colon1
\par \hich\af4\dbch\af31505\loch\f4 with IN_Colon1_checksurg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, prior_dt, end_fu, (DATEADD(Month, -1, Diag_Start_Date)) as prior_dt_1m from IN_Colon1_meta_benes
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par \tab 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join MC_FFS_IP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_f\hich\af4\dbch\af31505\loch\f4 u) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Colon1'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_SNF as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_\hich\af4\dbch\af31505\loch\f4 type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Colon1'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'Colon1'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_OP_I as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join MC_FFS_OP_PROC as b\tab on\hich\af4\dbch\af31505\loch\f4  a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC') and site = 'Colon1'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID,  b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      in\hich\af4\dbch\af31505\loch\f4 ner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m) ) and  (c.code_type = 'HCPCS')  and site = 'Colon1'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'Colon1'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_H\hich\af4\dbch\af31505\loch\f4 HA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'Colon1'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Colon1_checksurg as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'Colon1'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Colon1_4surg as (
\par \hich\af4\dbch\af31505\loch\f4            select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_D\hich\af4\dbch\af31505\loch\f4 T from IN_Colon1_SNF) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_PH) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_OP_I) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Colon1_HOSPC)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get surgeries procs for benes dur\hich\af4\dbch\af31505\loch\f4 ing fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Colon1_surg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID from IN_Colon1_4surg 
\par \hich\af4\dbch\af31505\loch\f4  )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_colon1_elig
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.prior_dt, a.end_fu from
\par \hich\af4\dbch\af31505\loch\f4 IN_Colon1_checksurg a left join IN_Colon1_surg b on a.bene_id = b.bene_id where b.bene_id is null;
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ---- rectum1;
\par \hich\af4\dbch\af31505\loch\f4 use Medicare;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 drop table IN_Rectum1_elig;
\par \hich\af4\dbch\af31505\loch\f4 Create table IN_Rectum1_elig(
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX r1 ON IN_Rectum1_elig;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_Rectum1_checksurg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date,prior_dt, end_fu, (DATEADD(Month, -1, Diag_Start_Date)) as prior_dt_1m from IN_Rectum1_meta_benes
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \tab 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join MC_FFS_IP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) a\hich\af4\dbch\af31505\loch\f4 nd (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Rectum1'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_SNF as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC\hich\af4\dbch\af31505\loch\f4 ')  and site = 'Rectum1'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'Rectum1'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_OP_I as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join MC_FFS_OP_PROC as \hich\af4\dbch\af31505\loch\f4 b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC') and site = 'Rectum1'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID,  b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4            \hich\af4\dbch\af31505\loch\f4              \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m) ) and  (c.code_type = 'HCPCS')  and site = 'Rectum1'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD\hich\af4\dbch\af31505\loch\f4  = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'Rectum1'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >\hich\af4\dbch\af31505\loch\f4 = prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'Rectum1'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Rectum1_checksurg as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'Rectum1'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Rectum1_4surg as (
\par \hich\af4\dbch\af31505\loch\f4            select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_SNF) union
\par \tab \hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4    (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_PH) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_OP_I) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_Rectum1_HOSPC)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get surgeries procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Rectum1_su\hich\af4\dbch\af31505\loch\f4 rg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID from IN_Rectum1_4surg 
\par \hich\af4\dbch\af31505\loch\f4  )
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_Rectum1_elig
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.prior_dt, a.end_fu from
\par \hich\af4\dbch\af31505\loch\f4 IN_Rectum1_checksurg a left join IN_Rectum1_surg b on a.bene_id = b.bene_id where b.bene_id is null;
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ********** gallbladder;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 use Medicare;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 drop table IN_gallbladder_elig;
\par \hich\af4\dbch\af31505\loch\f4 Create table IN_gallbladder_elig(
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX gb ON IN_gallbladder_elig;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_gallbladder_checksurg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, end_fu, prior_dt, (DATEADD(Month, -1, Diag_Start_Date)) as prior_dt_1m from IN_gallbladder_meta_benes
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \tab 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join MC_FFS_IP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4ince\hich\af4\dbch\af31505\loch\f4 xcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Gallbladder'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_SNF as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.icd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Gallbladder'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'Gallbladder'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_OP_I as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.i\hich\af4\dbch\af31505\loch\f4 cd_proc_dt as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join MC_FFS_OP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC') and site = 'Gallbladder'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID,  b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gall\hich\af4\dbch\af31505\loch\f4 bladder_checksurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m) ) and  (c.code_type = 'HCPCS')  and site = 'Gallbladder'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.LINE_1ST_EXPNS_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPN\hich\af4\dbch\af31505\loch\f4 S_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'Gallbladder'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site\hich\af4\dbch\af31505\loch\f4  = 'Gallbladder'           \tab 
\par \tab \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID, 
\par \tab \hich\af4\dbch\af31505\loch\f4 b.CLM_ID, b.REV_CNTR_DT as CLM_DT
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_gallbladder_checksurg as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'Gallbladder'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_gallbladder_4surg as (
\par \hich\af4\dbch\af31505\loch\f4            select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallb\hich\af4\dbch\af31505\loch\f4 ladder_SNF) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_PH) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_OP_I) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID, clm_id,  CLM_DT from IN_gallbladder_HOSPC)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get surgeries\hich\af4\dbch\af31505\loch\f4  procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_gallbladder_surg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID from IN_gallbladder_4surg 
\par \hich\af4\dbch\af31505\loch\f4  )
\par \hich\af4\dbch\af31505\loch\f4 --select count (distinct bene_ID) from IN_gallbladder_surg;
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_gallbladder_elig
\par \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, a.Diag_Start_Date, a.prior_dt, a.end_fu from
\par \hich\af4\dbch\af31505\loch\f4 IN_gallbladder_checksurg a left join IN_gallbladder_surg b on a.bene_id = b.bene_id where b.bene_id is null;
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /************************************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /****************************************Step 4 b - check FRAILTY }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid14515211 \hich\af4\dbch\af31505\loch\f4 score and \hich\af4\dbch\af31505\loch\f4 
keep pancreas patients with frailty < 0.5 }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 ********************************/
\par \hich\af4\dbch\af31505\loch\f4 /**********************************************************************************************************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 --CREATE CLUSTERED COLUMNSTORE INDEX CCI_IN_faurot_codes ON Medicare.dbo.IN_faurot_codes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 /********* pancreas1;*/
\par 
\par \hich\af4\dbch\af31505\loch\f4 use Medicare;
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_panc_elig_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check meta for
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_panc_elig_f(
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 CREATE CLUSTERED COLUMNSTORE INDEX pb2 ON Medicare.dbo.IN_panc_elig_f;
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check frailty for
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_pancreas1_checkfrail as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, prior_dt, end_fu, (DATEADD(M, -8, Diag_Start_Date)) as prior_dt_8m from IN_panc_meta_benes
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during fu. only need claims from 8m prior to dx
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_IPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 i\hich\af4\dbch\af31505\loch\f4 nner join MC_FFS_IP_DX as b on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'    
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF dxs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_SNFd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join MC_FFS_SNF_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'    
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname\hich\af4\dbch\af31505\loch\f4 , count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type='HCPCS'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_PHd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join FFS_OPR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_\hich\af4\dbch\af31505\loch\f4 faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type='HCPCS'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_OPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' an\hich\af4\dbch\af31505\loch\f4 d c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join FFS_DMEL as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS'     
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_DMEd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join MC_FFS_DME_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_co\hich\af4\dbch\af31505\loch\f4 des as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join FFS_HHAR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS' 
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_HHAd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join MC_FFS_HHA_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.b\hich\af4\dbch\af31505\loch\f4 ene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type<>'HCPCS' and c.code_type<>'NDC'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join FFS_HOSPCR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR\hich\af4\dbch\af31505\loch\f4 _DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_HOSPCd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_checkfrail as a inner join MC_FFS_HOSPC_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_pancreas1_4frail as (
\par \tab \hich\af4\dbch\af31505\loch\f4      select distinct * from IN_pancreas1_IPd union all
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_SNFd) union
\par \tab \hich\af4\dbch\af31505\loch\f4   \hich\af4\dbch\af31505\loch\f4   (select distinct *  from IN_pancreas1_PH) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct * from IN_pancreas1_PHd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_OPd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_DMEd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_HHAd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_HOSPC) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_pancreas1_HOSPCd)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*-------- get caegories 
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_fr_check as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, b.varname\tab from IN_pancreas1_4frail as a inner join IN_faurot_codes as b 
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.code = b.code
\par \hich\af4\dbch\af31505\loch\f4  ), -- Very few HCPCS - might be faster to link in each subquery then union
\par \hich\af4\dbch\af31505\loch\f4  */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- indicators for each frailty condition
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_conds_frail as ( 
\par \hich\af4\dbch\af31505\loch\f4     select distinct BENE_ID, sum(case when varname = 'rehabilitati\hich\af4\dbch\af31505\loch\f4 on_services' then 1 else 0 end) as rehabilitation_services
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'bladder_dysfunction' then 1 else 0 end) as bladder_dysfunction
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'podiatric_care' then 1 else 0 end) as podiatric_care
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'weakness' then 1 else 0 end) as weakness
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'vertigo' then 1 else 0 end) as vertigo
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'home_hospital_bed' then 1 else 0 end) as home_hospital_bed
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'wheelchair' then 1 else 0 end) as wheelcha\hich\af4\dbch\af31505\loch\f4 ir
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'psychiatric_diagnoses' then 1 else 0 end) as psychiatric_diagnoses
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'home_oxygen' then 1 else 0 end) as home_oxygen
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'stroke_brain_injury' then 1 else 0 end) as stroke_brain_injury
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'paralysis' then 1 else 0 end) as paralysis
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'parkinsons_disease' then 1 else 0 end) as parkinsons_disease
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'dementia' then 1 else 0 end) as dementia
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'arthritis' then 1 else 0 end) as arthritis
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'lipid_abnormality' then 1 else 0 end) as lipid_abnormality
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'ambulance_life_suppo\hich\af4\dbch\af31505\loch\f4 rt' then 1 else 0 end) as ambulance_life_support
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'cancer_screening' then 1 else 0 end) as cancer_screening
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'skin_ulcer' then 1 else 0 end) as skin_ulcer
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'hyposhock' then 1 else 0 end) as hyposhock
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'heart_failure' then 1 else 0 end) as heart_failure
\par \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_4frail group by bene_id),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- indicators for each frailty condition
\par \hich\af4\dbch\af31505\loch\f4     IN_pancreas1_conds_frail_flgs as ( 
\par \hich\af4\dbch\af31505\loch\f4     select distinct BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4 ,(c\hich\af4\dbch\af31505\loch\f4 ase when rehabilitation_services >= 1 then 1 else 0 end) as rehabilitation_services_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when bladder_dysfunction >= 1 then 1 else 0 end) as bladder_dysfunction_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when podiatric_care >= 1 then 1 else 0 end) as podiatric_care_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when weakness >= 1 then 1 else 0 end) as weakness_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when vertigo >= 1 then 1 else 0 end) as vertigo_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when home_hospital_bed >= 1 then 1 else 0 end) as home_hospital_bed_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when wheelchair >= 1 then 1 else 0 end) as wheelchair_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when psychi\hich\af4\dbch\af31505\loch\f4 atric_diagnoses >= 1 then 1 else 0 end) as psychiatric_diagnoses_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when home_oxygen >= 1 then 1 else 0 end) as home_oxygen_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when stroke_brain_injury >= 1 then 1 else 0 end) as stroke_brain_injury_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when paralysis >= 1 then 1 else 0 end) as paralysis_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when parkinsons_disease >= 1 then 1 else 0 end) as parkinsons_disease_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when dementia >= 1 then 1 else 0 end) as dementia_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when arthritis >= 1 then 1 else 0 end) as arthritis_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when lipid_abnormality >= 1 then 1 else 0 end) as lipid_abnormality_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when ambulance_life_support >= 1 then 1 else 0 end) as ambulance_life_support_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case \hich\af4\dbch\af31505\loch\f4 when cancer_screening >= 1 then 1 else 0 end) as cancer_screening_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when skin_ulcer >= 1 then 1 else 0 end) as skin_ulcer_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when hyposhock >= 1 then 1 else 0 end) as hyposhock_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when heart_failure >= 1 then 1 else 0 end) as heart_failure_f
\par \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_conds_frail ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- want data at the sg4 level 
\par \hich\af4\dbch\af31505\loch\f4  IN_pancreas1_frail_b4eq as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select distinct b.bene_ID, a.rehabilitation_services_f, a.bladder_dysfunction_f, podiatric_care_f, weakness_f, vertigo_f, home_hospital_bed_f,
\par \hich\af4\dbch\af31505\loch\f4  \tab whe\hich\af4\dbch\af31505\loch\f4 elchair_f, psychiatric_diagnoses_f, home_oxygen_f, stroke_brain_injury_f, paralysis_f, parkinsons_disease_f, dementia_f, arthritis_f,
\par \hich\af4\dbch\af31505\loch\f4  \tab lipid_abnormality_f, ambulance_life_support_f, cancer_screening_f, skin_ulcer_f, hyposhock_f, heart_failure_f from
\par \hich\af4\dbch\af31505\loch\f4  IN_pancreas1_conds_frail_flgs a right join IN_panc_meta_benes b on a.bene_id = b.bene_id),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- want vars for age and race ec
\par \hich\af4\dbch\af31505\loch\f4  IN_pancreas1_frail_b4eq_f as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select distinct a.*, 
\par \hich\af4\dbch\af31505\loch\f4  \tab \hich\af4\dbch\af31505\loch\f4 DATEDIFF(year, b.Birth_date, b.Diag_Start_Date) as age, (case when b.sex = 2 then 1 else 0 end) as female_indi
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(case when b.race_rti = 2 then 1 else 0 end) as nonhisp_black_indi, (case when b.race_rti = 5 then 1 else 0 end) as hisp_lat_indi
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(case when b.race_rti in (0,1,3,4,6) then 1 else 0 end) as nonhisp_otherrace_indi, 
\par \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date, end_fu, prior_dt from
\par \tab \hich\af4\dbch\af31505\loch\f4 IN_pancreas1_frail_b4eq a left join IN_panc_ids b on a.bene_id = b.bene_Id),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- get odds of dep score
\par \hich\af4\dbch\af31505\loch\f4  IN_pancreas1_frail_eq as (
\par \hich\af4\dbch\af31505\loch\f4  selec\hich\af4\dbch\af31505\loch\f4 t bene_id, age, female_indi, nonhisp_black_indi, hisp_lat_indi, nonhisp_otherrace_indi,
\par \hich\af4\dbch\af31505\loch\f4  exp(-3.7466+ (age-65)*(0.0028)+\tab (age-65)*(age-65)*(0.0021)+\tab female_indi*(0.353)+ 
\par \hich\af4\dbch\af31505\loch\f4              nonhisp_black_indi*(0.3126)+ hisp_lat_indi*(-0.5097)+ nonhisp_otherrace_indi*(0.8228)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              home_hospital_bed_f*(1.4995)+   wheelchair_f*(1.5094)+\tab             ambulance_life_support_f*(0.4423)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              bladder_dysfunction_f*(0.4161)+ home_oxygen_f*(0.9094)+            paralysis_f*(1.8541)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              dementia\hich\af4\dbch\af31505\loch\f4 _f*(0.7917)+\tab            cancer_screening_f*(-0.5559)+\tab     heart_failure_f*(0.412)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              lipid_abnormality_f*(-0.3544)+  psychiatric_diagnoses_f*(0.5363)+\tab vertigo_f*(-0.5925)+\tab \tab 
\par \hich\af4\dbch\af31505\loch\f4              parkinsons_disease_f*(1.1873)+  podiatric_care_f*(0.5322)+      \tab rehabilitation_services_f*(-0.4315)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              arthritis_f*(0.3598)+\tab        skin_ulcer_f*(0.8464)+\tab         \tab stroke_brain_injury_f*(0.4745)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              weakness_f*(0.4921)+\tab \tab        hyposhock_f*(0.6038)
\par \hich\af4\dbch\af31505\loch\f4             ) as odds_dep,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_D\hich\af4\dbch\af31505\loch\f4 ate, end_fu, prior_dt from
\par \hich\af4\dbch\af31505\loch\f4 IN_pancreas1_frail_b4eq_f ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- for benes with no clms for any conds, we know that they will be less frail. and we need to still create frailty score
\par \hich\af4\dbch\af31505\loch\f4  IN_pancreas1_frail_eq_f as (select bene_id, (case when odds_dep IS NOT NULL then odds_dep
\par \hich\af4\dbch\af31505\loch\f4                                                    else
\par \hich\af4\dbch\af31505\loch\f4              exp(-3.7466+ (age-65)*(0.0028)+\tab (age-65)*(age-65)*(0.0021)+\tab female_indi*(0.353)+ 
\par \hich\af4\dbch\af31505\loch\f4              nonhisp_black_indi*(0.3126)+ hisp_lat_indi*(-0.5097)+ nonhisp_otherrace_indi*(0.8228)) end) as odds_dep_f,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_Date, end_fu, prior_dt
\par \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_frail_eq),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- get frail score
\par \hich\af4\dbch\af31505\loch\f4  IN_pancreas1_frail as (
\par \hich\af4\dbch\af31505\loch\f4  select bene_id, (odds_dep_f/ (1+odds_dep_f)) as frail_score,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_Date, end_fu, prior_dt
\par \hich\af4\dbch\af31505\loch\f4  from IN_pancreas1_frail_eq_f )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_panc_elig_f
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, prior_dt, end_fu
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_pancreas1_frail where frail_score < 0.5;
\par 
\par 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid14515211 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 /************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /************************ ocavp2 ***************/
\par \hich\af4\dbch\af31505\loch\f4 /***** check frail}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid14515211 \hich\af4\dbch\af31505\loch\f4  (we want to keep patients with frailty < 0.5\hich\af4\dbch\af31505\loch\f4 )}{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4  \hich\af4\dbch\af31505\loch\f4 and lack of surgery ********/
\par \hich\af4\dbch\af31505\loch\f4 /*********************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cciIN_CODES_4INCEXCL on IN_CODES_4INCEXCL;
\par \hich\af4\dbch\af31505\loch\f4 use Medicare;
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_ocavp2_lessfrail_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt_1m date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_lessfr on IN_ocavp2_lessfrail_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_ocavp2_checkfrail as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, prior_dt, end_fu, (DATEADD(M, -8, Diag_Start_Date)) as prior_dt_8m from IN_ocavp2_nonmeta_benes
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during fu. only need claims from 8m prior to dx
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_IPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join MC_FFS_IP_DX as b on a\hich\af4\dbch\af31505\loch\f4 .bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'    
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF dxs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_SNFd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join MC_FFS_SNF_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'    
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.\hich\af4\dbch\af31505\loch\f4 CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type='HCPCS'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_PHd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join FFS_OPR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between pr\hich\af4\dbch\af31505\loch\f4 ior_dt_8m and  Diag_Start_Date  and c.code_type='HCPCS'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_OPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join FFS_DMEL as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS'     
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_DMEd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join MC_FFS_DME_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join FFS_HHAR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS' 
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_HHAd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join MC_FFS_HHA_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = \hich\af4\dbch\af31505\loch\f4 c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type<>'HCPCS' and c.code_type<>'NDC'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join FFS_HOSPCR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS' \hich\af4\dbch\af31505\loch\f4      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_HOSPCd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checkfrail as a inner join MC_FFS_HOSPC_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_ocavp2_4frail as (
\par \tab \hich\af4\dbch\af31505\loch\f4      select distinct * from IN_ocavp2_IPd union all
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_SNFd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct *  from IN_ocavp2_PH) union
\par \hich\af4\dbch\af31505\loch\f4         (select dis\hich\af4\dbch\af31505\loch\f4 tinct * from IN_ocavp2_PHd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_OPd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_DMEd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_HHAd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_HOSPC) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_ocavp2_HOSPCd)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*-------- get caegories 
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_fr_check as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, b.varname\tab from IN_ocavp2_4frail as a inner join IN_faurot_codes as b 
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.code = b.code
\par \hich\af4\dbch\af31505\loch\f4  ), -- Very few HCPCS - might be faster to link in each subquery then union
\par \hich\af4\dbch\af31505\loch\f4  */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- indicators for each frailty condition
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_conds_frail as ( 
\par \hich\af4\dbch\af31505\loch\f4     select distinct BENE_ID, sum(case when varname = 'rehabilitation_services' then 1 else 0 end) as rehabilitation_services
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'bladder_dysfunction' then 1 else 0 end) as bladder_dysfunctio\hich\af4\dbch\af31505\loch\f4 n
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'podiatric_care' then 1 else 0 end) as podiatric_care
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'weakness' then 1 else 0 end) as weakness
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'vertigo' then 1 else 0 end) as vertigo
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'home_hospital_bed' then 1 else 0 end) as home_hospital_bed
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'wheelchair' then 1 else 0 end) as wheelchair
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'psychiatric_diagnoses' then 1 else 0 end) as psychiatric_diagnoses
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'home_oxygen' then 1 else\hich\af4\dbch\af31505\loch\f4  0 end) as home_oxygen
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'stroke_brain_injury' then 1 else 0 end) as stroke_brain_injury
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'paralysis' then 1 else 0 end) as paralysis
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'parkinsons_disease' then 1 else 0 end) as parkinsons_disease
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'dementia' then 1 else 0 end) as dementia
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'arthritis' then 1 else 0 end) as arthritis
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'lipid_abnormality' then 1 else 0 end) as lipid_abnormality
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'ambulance_life_support' then 1 else 0 end) as ambulance_life_support
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'cancer_screening' then 1 else 0 end) as cancer_screening
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = '\hich\af4\dbch\af31505\loch\f4 skin_ulcer' then 1 else 0 end) as skin_ulcer
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'hyposhock' then 1 else 0 end) as hyposhock
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'heart_failure' then 1 else 0 end) as heart_failure
\par \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_4frail group by bene_id),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- indicators for each frailty condition
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_conds_frail_flgs as ( 
\par \hich\af4\dbch\af31505\loch\f4     select distinct BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4 ,(case when rehabilitation_services >= 1 then 1 else 0 end) as rehabilitation_services_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when bladder_dysfunction >= 1 then 1 else 0 end) as bladder_dysfunction\hich\af4\dbch\af31505\loch\f4 _f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when podiatric_care >= 1 then 1 else 0 end) as podiatric_care_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when weakness >= 1 then 1 else 0 end) as weakness_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when vertigo >= 1 then 1 else 0 end) as vertigo_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when home_hospital_bed >= 1 then 1 else 0 end) as home_hospital_bed_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when wheelchair >= 1 then 1 else 0 end) as wheelchair_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when psychiatric_diagnoses >= 1 then 1 else 0 end) as psychiatric_diagnoses_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when home_oxygen >= 1 then 1 else 0 end) as home_oxygen_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when stroke_brain_injury >= 1 then 1 else 0 end) as stroke_brain_injury_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when paralysis >= 1 then 1 else 0 end) as paralysis_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when parkinsons_disease >= 1 then 1 else 0 end) as parkinsons_disease_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when dementia >= 1 then 1 else 0 end) as dementia_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when arthritis >= 1 then 1 else 0 end) as arthritis_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when lipid_abnormality >= 1 then 1 else 0 end) as lipid_abnormality_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when ambulance_life_support >= 1 then 1 else 0 end) as ambulance_life_support_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case \hich\af4\dbch\af31505\loch\f4 when cancer_screening >= 1 then 1 else 0 end) as cancer_screening_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when skin_ulcer >= 1 then 1 else 0 end) as skin_ulcer_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when hyposhock >= 1 then 1 else 0 end) as hyposhock_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when heart_failure >= 1 then 1 else 0 end) as heart_failure_f
\par \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_conds_frail ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- want data at the sg4 level 
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_frail_b4eq as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select distinct b.bene_ID, a.rehabilitation_services_f, a.bladder_dysfunction_f, podiatric_care_f, weakness_f, vertigo_f, home_hospital_bed_f,
\par \hich\af4\dbch\af31505\loch\f4  \tab wheelchai\hich\af4\dbch\af31505\loch\f4 r_f, psychiatric_diagnoses_f, home_oxygen_f, stroke_brain_injury_f, paralysis_f, parkinsons_disease_f, dementia_f, arthritis_f,
\par \hich\af4\dbch\af31505\loch\f4  \tab lipid_abnormality_f, ambulance_life_support_f, cancer_screening_f, skin_ulcer_f, hyposhock_f, heart_failure_f from
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_conds_frail_flgs a right join IN_ocavp2_nonmeta_benes b on a.bene_id = b.bene_id),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- want vars for age and race ec
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_frail_b4eq_f as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select distinct a.*, 
\par \hich\af4\dbch\af31505\loch\f4  \tab \hich\af4\dbch\af31505\loch\f4 DATEDIFF(year, b.Birth_date, b.Diag_Start_Date) as age, (case when b.sex = 2 then 1 else 0 end) as female_indi
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(case when b.race_rti = 2 then 1 else 0 end) as nonhisp_black_indi, (case when b.race_rti = 5 then 1 else 0 end) as hisp_lat_indi
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(case when b.race_rti in (0,1,3,4,6) then 1 else 0 end) as nonhisp_otherrace_indi, 
\par \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date, end_fu, prior_dt from
\par \tab \hich\af4\dbch\af31505\loch\f4 IN_ocavp2_frail_b4eq a left join IN_ocavp2_ids b on a.bene_id = b.bene_Id),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- get odds of dep score
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_frail_eq as (
\par \hich\af4\dbch\af31505\loch\f4  select be\hich\af4\dbch\af31505\loch\f4 ne_id, age, female_indi, nonhisp_black_indi, hisp_lat_indi, nonhisp_otherrace_indi,
\par \hich\af4\dbch\af31505\loch\f4  exp(-3.7466+ (age-65)*(0.0028)+\tab (age-65)*(age-65)*(0.0021)+\tab female_indi*(0.353)+ 
\par \hich\af4\dbch\af31505\loch\f4              nonhisp_black_indi*(0.3126)+ hisp_lat_indi*(-0.5097)+ nonhisp_otherrace_indi*(0.8228)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              home_hospital_bed_f*(1.4995)+   wheelchair_f*(1.5094)+\tab             ambulance_life_support_f*(0.4423)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              bladder_dysfunction_f*(0.4161)+ home_oxygen_f*(0.9094)+            paralysis_f*(1.8541)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              dementia_f*(\hich\af4\dbch\af31505\loch\f4 0.7917)+\tab            cancer_screening_f*(-0.5559)+\tab     heart_failure_f*(0.412)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              lipid_abnormality_f*(-0.3544)+  psychiatric_diagnoses_f*(0.5363)+\tab vertigo_f*(-0.5925)+\tab \tab 
\par \hich\af4\dbch\af31505\loch\f4              parkinsons_disease_f*(1.1873)+  podiatric_care_f*(0.5322)+      \tab rehabilitation_services_f*(-0.4315)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              arthritis_f*(0.3598)+\tab        skin_ulcer_f*(0.8464)+\tab         \tab stroke_brain_injury_f*(0.4745)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              weakness_f*(0.4921)+\tab \tab        hyposhock_f*(0.6038)
\par \hich\af4\dbch\af31505\loch\f4             ) as odds_dep,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_Date,\hich\af4\dbch\af31505\loch\f4  end_fu, prior_dt from
\par \hich\af4\dbch\af31505\loch\f4 IN_ocavp2_frail_b4eq_f ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- for benes with no clms for any conds, we know that they will be less frail. and we need to still create frailty score
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_frail_eq_f as (select bene_id, (case when odds_dep IS NOT NULL then odds_dep
\par \hich\af4\dbch\af31505\loch\f4                                                    else
\par \hich\af4\dbch\af31505\loch\f4              exp(-3.7466+ (age-65)*(0.0028)+\tab (age-65)*(age-65)*(0.0021)+\tab female_indi*(0.353)+ 
\par \hich\af4\dbch\af31505\loch\f4       \hich\af4\dbch\af31505\loch\f4        nonhisp_black_indi*(0.3126)+ hisp_lat_indi*(-0.5097)+ nonhisp_otherrace_indi*(0.8228)) end) as odds_dep_f,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_Date, end_fu, prior_dt
\par \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_frail_eq),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- get frail score
\par \hich\af4\dbch\af31505\loch\f4  IN_ocavp2_frail as (
\par \hich\af4\dbch\af31505\loch\f4  select bene_id, (odds_dep_f/ (1+odds_dep_f)) as frail_score,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_Date, end_fu, prior_dt
\par \hich\af4\dbch\af31505\loch\f4  from IN_ocavp2_frail_eq_f )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_ocavp2_lessfrail_f
\par \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, prior_dt, end_fu, (DATEADD(Month, -1, Diag_Start_Date)) as prior_dt_1m
\par \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_frail wher\hich\af4\dbch\af31505\loch\f4 e frail_score < 0.5;
\par 
\par 
\par 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid7218855 \hich\af4\dbch\af31505\loch\f4 /************************************************************}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\par \hich\af4\dbch\af31505\loch\f4 **************myeloma}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid15162416 \hich\af4\dbch\af31505\loch\f4  \hich\f4 \endash \loch\f4  for myeloma1 and 2 we \hich\af4\dbch\af31505\loch\f4 
apply restrictions using frailty score so we need the score for each patient}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid7218855 \hich\af4\dbch\af31505\loch\f4 *************************************************************/}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid7218855 
\par }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 --CREATE CLUSTERED COLUMNSTORE INDEX CCI_IN_faurot_codes ON Medicare.dbo.IN_faurot_codes;
\par 
\par \hich\af4\dbch\af31505\loch\f4 /********* myeloma;*/
\par 
\par \hich\af4\dbch\af31505\loch\f4 use medicare;
\par 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_mm_getfrailty_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 frail_score real,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_mm_fr on IN_mm_getfrailty_f;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check frailty for
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 use medicare;
\par \hich\af4\dbch\af31505\loch\f4 with IN_mm_checkfrail as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, (DATEADD(M, -8, Diag_Start_Date)) as prior_dt_8m from IN_mm_Cov 
\par \hich\af4\dbch\af31505\loch\f4       where Diag_Clean = 'Y' and partd_Clean = 'Y'
\par 
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP d\hich\af4\dbch\af31505\loch\f4 xs for benes during fu. only need claims from 8m prior to dx
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_IPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join MC_FFS_IP_DX as b on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'    
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF dxs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_SNFd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join MC_FFS_SNF_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 wher\hich\af4\dbch\af31505\loch\f4 e CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'    
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type='HCPCS'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_PHd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join MC_FFS_PH_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.va\hich\af4\dbch\af31505\loch\f4 rname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join FFS_OPR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type='HCPCS'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_OPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join MC_FFS_OP_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join FFS_DMEL as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.be\hich\af4\dbch\af31505\loch\f4 ne_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS'     
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_DMEd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join MC_FFS_DME_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join FFS_HHAR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS' 
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.\hich\af4\dbch\af31505\loch\f4 varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HHAd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join MC_FFS_HHA_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date  and c.code_type<>'HCPCS' and c.code_type<>'NDC'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join FFS_HOSPCR as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.HCPCS_CD = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between prior_dt_8m and  Diag_Start_Date and c.code_type='HCPCS'      
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HOSPCd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID, c.varname, count(b.CLM_ID) as cnt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_checkfrail as a inner join MC_FFS_HOSPC_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id\hich\af4\dbch\af31505\loch\f4  = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 inner join IN_faurot_codes as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between prior_dt_8m and  Diag_Start_Date and c.code_type<>'HCPCS' and c.code_type<>'NDC'  
\par \tab \hich\af4\dbch\af31505\loch\f4 group by  a.BENE_ID, c.varname
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_mm_4frail as (
\par \tab \hich\af4\dbch\af31505\loch\f4      select distinct * from IN_mm_IPd union all
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_SNFd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_PH) union
\par \hich\af4\dbch\af31505\loch\f4           (select distinct * from IN_mm_PHd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_OPd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_DMEd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HHAd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HOSPC) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HOSPCd)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*-------- get caegories 
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_fr_check as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*, b.varname\tab from IN_mm_4frail as a inner join IN_faurot_codes as b\hich\af4\dbch\af31505\loch\f4  
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.code = b.code
\par \hich\af4\dbch\af31505\loch\f4  ), -- Very few HCPCS - might be faster to link in each subquery then union
\par \hich\af4\dbch\af31505\loch\f4  */
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- indicators for each frailty condition
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_conds_frail as ( 
\par \hich\af4\dbch\af31505\loch\f4     select distinct BENE_ID, sum(case when varname = 'rehabilitation_services' then 1 else 0 end) as rehabilitation_services
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'bladder_dysfunction' then 1 else 0 end) as bladder_dysfunction
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'podiatric_care' then 1 else 0 end) as podiatric_care
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'weakness' then 1 else 0 end) as weakness
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'vertigo' then 1 else 0 end) as vertigo
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'home_hospital_bed' then 1 else 0 end) as home_hospital_bed
\par \hich\af4\dbch\af31505\loch\f4 ,s\hich\af4\dbch\af31505\loch\f4 um(case when varname = 'wheelchair' then 1 else 0 end) as wheelchair
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'psychiatric_diagnoses' then 1 else 0 end) as psychiatric_diagnoses
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'home_oxygen' then 1 else 0 end) as home_oxygen
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'stroke_brain_injury' then 1 else 0 end) as stroke_brain_injury
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'paralysis' then 1 else 0 end) as paralysis
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'parkinsons_disease' then 1 else 0 end) as parkinsons_disease
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'dement\hich\af4\dbch\af31505\loch\f4 ia' then 1 else 0 end) as dementia
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'arthritis' then 1 else 0 end) as arthritis
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'lipid_abnormality' then 1 else 0 end) as lipid_abnormality
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'ambulance_life_support' then 1 else 0 end) as ambulance_life_support
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'cancer_screening' then 1 else 0 end) as cancer_screening
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'skin_ulcer' then 1 else 0 end) as skin_ulcer
\par \hich\af4\dbch\af31505\loch\f4 ,sum(case when varname = 'hyposhock' then 1 else 0 end) as hyposhock
\par \hich\af4\dbch\af31505\loch\f4 ,sum(\hich\af4\dbch\af31505\loch\f4 case when varname = 'heart_failure' then 1 else 0 end) as heart_failure
\par \hich\af4\dbch\af31505\loch\f4 from IN_mm_4frail group by bene_id),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- indicators for each frailty condition
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_conds_frail_flgs as ( 
\par \hich\af4\dbch\af31505\loch\f4     select distinct BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4 ,(case when rehabilitation_services >= 1 then 1 else 0 end) as rehabilitation_services_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when bladder_dysfunction >= 1 then 1 else 0 end) as bladder_dysfunction_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when podiatric_care >= 1 then 1 else 0 end) as podiatric_care_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when weakness >= 1 then 1 else 0 end) as weakness_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when vertigo >= 1 then 1 else 0 end) as vertigo_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when home_hospital_bed >= 1 then 1 else 0 end) as home_hospital_bed_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when wheelchair >= 1 then 1 else 0 end) as wheelchair_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when psy\hich\af4\dbch\af31505\loch\f4 chiatric_diagnoses >= 1 then 1 else 0 end) as psychiatric_diagnoses_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when home_oxygen >= 1 then 1 else 0 end) as home_oxygen_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when stroke_brain_injury >= 1 then 1 else 0 end) as stroke_brain_injury_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when paralysis >= 1 then 1 else 0 end) as paralysis_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when parkinsons_disease >= 1 then 1 else 0 end) as parkinsons_disease_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when dementia >= 1 then 1 else 0 end) as dementia_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when arthritis >= 1 then 1 else 0 end) as arthritis_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when lipid_abnormality >= 1 t\hich\af4\dbch\af31505\loch\f4 hen 1 else 0 end) as lipid_abnormality_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when ambulance_life_support >= 1 then 1 else 0 end) as ambulance_life_support_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when cancer_screening >= 1 then 1 else 0 end) as cancer_screening_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when skin_ulcer >= 1 then 1 else 0 end) as skin_ulcer_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when hyposhock >= 1 then 1 else 0 end) as hyposhock_f
\par \hich\af4\dbch\af31505\loch\f4 ,(case when heart_failure >= 1 then 1 else 0 end) as heart_failure_f
\par \hich\af4\dbch\af31505\loch\f4 from IN_mm_conds_frail ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- want data at the cov level 
\par \hich\af4\dbch\af31505\loch\f4  IN_mm_frail_b4eq as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select distinct b.bene_ID, a\hich\af4\dbch\af31505\loch\f4 .rehabilitation_services_f, a.bladder_dysfunction_f, podiatric_care_f, weakness_f, vertigo_f, home_hospital_bed_f,
\par \hich\af4\dbch\af31505\loch\f4  \tab \hich\af4\dbch\af31505\loch\f4 wheelchair_f, psychiatric_diagnoses_f, home_oxygen_f, stroke_brain_injury_f, paralysis_f, parkinsons_disease_f, dementia_f, arthritis_f,
\par \hich\af4\dbch\af31505\loch\f4  \tab lipid_abnormality_f, ambulance_life_support_f, cancer_screening_f, skin_ulcer_f, hyposhock_f, heart_failure_f from
\par \hich\af4\dbch\af31505\loch\f4  IN_mm_conds_frail_flgs a right join IN_mm_cov b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4  where diag_clean = 'Y' and partd_clean = 'Y'),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- want vars for age and race ec
\par \hich\af4\dbch\af31505\loch\f4  IN_mm_frail_b4eq_f as (
\par \hich\af4\dbch\af31505\loch\f4  \tab select distinct a.*, 
\par \hich\af4\dbch\af31505\loch\f4  \tab DATEDIFF(year, b.Birth_date, b.Diag_Start_Dat\hich\af4\dbch\af31505\loch\f4 e) as age, (case when b.sex = 2 then 1 else 0 end) as female_indi
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(case when b.race_rti = 2 then 1 else 0 end) as nonhisp_black_indi, (case when b.race_rti = 5 then 1 else 0 end) as hisp_lat_indi
\par \tab \hich\af4\dbch\af31505\loch\f4 ,(case when b.race_rti in (0,1,3,4,6) then 1 else 0 end) as nonhisp_otherrace_indi, 
\par \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date, end_fu, prior_dt from
\par \tab \hich\af4\dbch\af31505\loch\f4 IN_mm_frail_b4eq a left join IN_mm_ids b on a.bene_id = b.bene_Id),
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------- get odds of dep score
\par \hich\af4\dbch\af31505\loch\f4  IN_mm_frail_eq as (
\par \hich\af4\dbch\af31505\loch\f4  select bene_id, age, female_indi, nonhisp_black_indi, hisp_lat_ind\hich\af4\dbch\af31505\loch\f4 i, nonhisp_otherrace_indi,
\par \hich\af4\dbch\af31505\loch\f4  Diag_Start_Date, end_fu, prior_dt, exp(-3.7466+ (age-65)*(0.0028)+\tab (age-65)*(age-65)*(0.0021)+\tab female_indi*(0.353)+ 
\par \hich\af4\dbch\af31505\loch\f4              nonhisp_black_indi*(0.3126)+ hisp_lat_indi*(-0.5097)+ nonhisp_otherrace_indi*(0.8228)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              home_hospital_bed_f*(1.4995)+   wheelchair_f*(1.5094)+\tab             ambulance_life_support_f*(0.4423)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              bladder_dysfunction_f*(0.4161)+ home_oxygen_f*(0.9094)+            paralysis_f*(1.8541)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              dementia_f*(0.7917)+\tab            ca\hich\af4\dbch\af31505\loch\f4 ncer_screening_f*(-0.5559)+\tab     heart_failure_f*(0.412)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              lipid_abnormality_f*(-0.3544)+  psychiatric_diagnoses_f*(0.5363)+\tab vertigo_f*(-0.5925)+\tab \tab 
\par \hich\af4\dbch\af31505\loch\f4              parkinsons_disease_f*(1.1873)+  podiatric_care_f*(0.5322)+      \tab rehabilitation_services_f*(-0.4315)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              arthritis_f*(0.3598)+\tab        skin_ulcer_f*(0.8464)+\tab         \tab stroke_brain_injury_f*(0.4745)+\tab 
\par \hich\af4\dbch\af31505\loch\f4              weakness_f*(0.4921)+\tab \tab        hyposhock_f*(0.6038)
\par \hich\af4\dbch\af31505\loch\f4             ) as odds_dep from
\par \hich\af4\dbch\af31505\loch\f4 IN_mm_frail_b4eq_f ),
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- for benes with no clms for any conds, we know that they will be less frail. and we need to still create frailty score
\par \hich\af4\dbch\af31505\loch\f4  IN_mm_frail_eq_f as (select bene_id, age, Diag_Start_Date, end_fu, prior_dt, (case when odds_dep IS NOT NULL then odds_dep
\par \hich\af4\dbch\af31505\loch\f4                                                    else
\par \hich\af4\dbch\af31505\loch\f4              exp(-3.7466+ (age-65)*(0.0028)+\tab (age-65)*(age-65)*(0.0021)+\tab female_indi*(0.353)+ 
\par \hich\af4\dbch\af31505\loch\f4              nonhisp_black_indi*(0.3126)+ hisp_lat_indi*(-0.5097)+ nonhisp_otherrace_indi*(\hich\af4\dbch\af31505\loch\f4 0.8228)) end) as odds_dep_f
\par \hich\af4\dbch\af31505\loch\f4 from IN_mm_frail_eq)
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_mm_getfrailty_f
\par \hich\af4\dbch\af31505\loch\f4 select bene_id, age, Diag_Start_Date, end_fu, prior_dt, (odds_dep_f/ (1+odds_dep_f)) as frail_score
\par \hich\af4\dbch\af31505\loch\f4  from IN_mm_frail_eq_f;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select * from IN_mm_getfrailty_f where frail_score = .;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 4122 benes;
\par \hich\af4\dbch\af31505\loch\f4 select * from IN_mm_getfrailty_f where age <= 75 and frail_score <0.2;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 4830 benes;
\par \hich\af4\dbch\af31505\loch\f4 select * from IN_mm_getfrailty_f where age  > 75 or frail_score >=0.2;
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*******************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /***************************** check transplant for myeloma patients **********************/
\par \hich\af4\dbch\af31505\loch\f4 /*****************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 where 
\par \hich\af4\dbch\af31505\loch\f4 (dgns_cd in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0',
\par \hich\af4\dbch\af31505\loch\f4 '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',\hich\af4\dbch\af31505\loch\f4   '30250G0',  '30250Y0',  '30253G0',  
\par \hich\af4\dbch\af31505\loch\f4 '30253Y0',  '30260G0',  '30260Y0',  '30263G0',  '30263Y0') or HCPCS_CD in ('38241'))
\par \hich\af4\dbch\af31505\loch\f4 AND ( (dx_dt - 15) <= claim_dt <=  (endof_dxmth + 365) ); run;
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date) and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 66 and DATEDIFF(year, Birth_date, Diag_Star\hich\af4\dbch\af31505\loch\f4 t_Date)  < 75)
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select count (distinct bene_ID) from IN_mm_ids where 
\par \hich\af4\dbch\af31505\loch\f4 (Death_date = '1900-01-01' or (case when year(Death_Date) <> 1900 then DATEDIFF(day, Diag_Start_Date, Death_date) end) >30) 
\par \hich\af4\dbch\af31505\loch\f4 and (treat_start_date_PD >= Diag_Start_Date) and (DATEDIFF(year, Birth_date, Diag_Start_Date)  >= 75)
\par \hich\af4\dbch\af31505\loch\f4 and Diag_Clean = 'Y' ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 use medicare;
\par \hich\af4\dbch\af31505\loch\f4 drop table Medicare.dbo.IN_mm_get_trnsplt_f 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_mm_get_trnsplt_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 transplant_st varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_mm_elig on IN_m\hich\af4\dbch\af31505\loch\f4 m_get_trnsplt_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check transplant for
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_mm_transplant as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID,  a.Diag_Start_Date, b.end_fu from IN_mm_Cov a left join IN_mm_ids b on a.BENE_ID= b.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4       where a.Diag_Clean = 'Y' and partd_Clean = 'Y'
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during fu. only need claims for yr afer dx
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_IPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_IP_DX as b on a.bene_id = b.bene_id
\par \tab \tab \tab \hich\af4\dbch\af31505\loch\f4 
where CLM_FROM_DT between Diag_Start_Date and end_fu and b.DX in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0',  '
\hich\af4\dbch\af31505\loch\f4 30260G0',  '30260Y0',  '30263G0',  '30263Y0')    
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF dxs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_SNFd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_SNF_DX as b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start\hich\af4\dbch\af31505\loch\f4 
_Date and end_fu and b.DX in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0',  '30260G0',  '30260Y0',  '30263G0',  '
\hich\af4\dbch\af31505\loch\f4 30263Y0')    
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between Diag_Start_Date and end_fu and b.HCPCS_CD in\hich\af4\dbch\af31505\loch\f4  ('38241')
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_PHd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_PH_DX as b\tab on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 
where CLM_FROM_DT between Diag_Start_Date and end_fu and b.dx in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0',  
\hich\af4\dbch\af31505\loch\f4 '30260G0',  '30260Y0',  '30263G0',  '30263Y0')    
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join FFS_OPR as b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between Diag_Start_Date and end_fu and b.HCPCS_CD in ('38241')
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_OPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_OP_DX as b\tab on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and end_fu and b.dx in ('4101',  '4104', '4107', '4109', '30230AZ\hich\af4\dbch\af31505\loch\f4 
',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0',  '30260G0',  '30260Y0',  '30263G0',  '30263Y0')    
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where LINE_1ST_EXPNS_DT between Diag_Start_Date and end_fu and b.HCPCS_CD in ('38241')     
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm\hich\af4\dbch\af31505\loch\f4 _DMEd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_DME_DX as b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 
where CLM_FROM_DT between Diag_Start_Date and end_fu and b.dx in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0',  '
\hich\af4\dbch\af31505\loch\f4 30260G0',  '30260Y0',  '30263G0',  '30263Y0')    
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between Diag_Start_Date\hich\af4\dbch\af31505\loch\f4  and end_fu and b.HCPCS_CD in ('38241')
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HHAd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_HHA_DX as b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 
where CLM_FROM_DT between Diag_Start_Date and end_fu  and b.dx in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0', 
\hich\af4\dbch\af31505\loch\f4  '30260G0',  '30260Y0',  '30263G0',  '30263Y0')  \hich\af4\dbch\af31505\loch\f4   
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join FFS_HOSPCR as b\tab on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where REV_CNTR_DT between Diag_Start_Date and end_fu and b.HCPCS_CD in ('38241')      
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_mm_HOSPCd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_mm_transplant as a inner join MC_FFS_HOSPC_DX as b
\par \tab \hich\af4\dbch\af31505\loch\f4 on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 
where CLM_FROM_DT between Diag_Start_Date and end_fu and b.dx in ('4101',  '4104', '4107', '4109', '30230AZ',  '30230G0',  '30230Y0',  '30233G0', '30233Y0',  '30240G0',  '30240Y0',  '30243G0',  '30243Y0',  '30250G0',  '30250Y0',  '30253G0',  '30253Y0',  '
\hich\af4\dbch\af31505\loch\f4 30260G0',  '30260Y0',  '30263G0',  '30263Y0')    
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_mm_4ft as (
\par \tab \hich\af4\dbch\af31505\loch\f4      select distinct * from IN_mm_IPd union all
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_SNFd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct *  from IN_mm_PH) union
\par \hich\af4\dbch\af31505\loch\f4           (sele\hich\af4\dbch\af31505\loch\f4 ct distinct * from IN_mm_PHd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_OPd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_DMEd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HHAd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HOSPC) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_mm_HOSPCd)
\par \hich\af4\dbch\af31505\loch\f4   )
\par 
\par \hich\af4\dbch\af31505\loch\f4   
\par \hich\af4\dbch\af31505\loch\f4 --784;
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_mm_get_trnsplt_f
\par \hich\af4\dbch\af31505\loch\f4 select bene_id, 1 as transplant_st
\par \hich\af4\dbch\af31505\loch\f4  from IN_mm_4ft
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 drop table Medicare.dbo.IN_mm_getelig_f 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_mm_getelig_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 age INT, 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 frail_score real,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 transplant_st varchar(1),
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_mm_elig on IN_mm_getelig_f;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_mm_getelig_f
\par \hich\af4\dbch\af31505\loch\f4 select a.*, b.transplant_st
\par \hich\af4\dbch\af31505\loch\f4  from IN_mm_getfrailty_f a left jo\hich\af4\dbch\af31505\loch\f4 in IN_mm_get_trnsplt_f b on a.bene_id = b.bene_id;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 4181 benes;
\par \hich\af4\dbch\af31505\loch\f4 select * from IN_mm_getelig_f where (age <= 75 and frail_score <0.2) or (transplant_st = 1);
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 4771 benes;
\par \hich\af4\dbch\af31505\loch\f4 select * from IN_mm_getelig_f where (age  > 75 or frail_score >=0.2) and (transplant_st is NULL);
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*****************************************************************************************/
\par -------------------------------
\par \hich\af4\dbch\af31505\loch\f4 ------- }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid2308205 \hich\af4\dbch\af31505\loch\f4 apply scenario specific criterias for }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 CLL
\par -------------------------------
\par \hich\af4\dbch\af31505\loch\f4 /*****************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 use Medicare;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 drop table Medicare.dbo.IN_cll_elig 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_cll_elig (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cll_elig on IN_cll_elig;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get benes that we need to check occurrence of drugs for
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_cll_chckoccdr as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, 
\par \hich\af4\dbch\af31505\loch\f4        (case when year(Death_Date) = 1900 then DATEADD(YEAR, 2, Diag_Start_Date)
\par \hich\af4\dbch\af31505\loch\f4              when year(Death_Date) <> 1900 and Death_Date <= (DATEADD(YEAR, 2, Diag_Start_Date)) then Death_Date
\par \hich\af4\dbch\af31505\loch\f4              else (DATEADD(YEAR, 2, Diag_Start_Date))
\par \hich\af4\dbch\af31505\loch\f4         end) as end_fu, 
\par \tab \hich\af4\dbch\af31505\loch\f4 (DATEADD(YEAR, -1, Diag_Start_Date)) as prior_dt
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_Cov where Diag_Clean = 'Y' and partd_Clean = 'Y\hich\af4\dbch\af31505\loch\f4 '
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \tab 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS') 
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of leukemia drugs or CML drugs'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= Diag_Start_Date) ) and  (c.code_type = 'HCPCS')  
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of le\hich\af4\dbch\af31505\loch\f4 ukemia drugs or CML drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS') 
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of leukemia drugs or CML drugs'     \hich\af4\dbch\af31505\loch\f4                   \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID\tab 
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab \hich\af4\dbch\af31505\loch\f4      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of leukemia drugs or CML drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl \hich\af4\dbch\af31505\loch\f4 as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= Diag_Start_Date)) and  (c.code_type = 'HCPCS')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of leukemia drugs or CML drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PARtD meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_partd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_PDE as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.PROD_SRVC_ID = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where\hich\af4\dbch\af31505\loch\f4  ((SRVC_DT <= end_fu) and (SRVC_DT >= Diag_Start_Date)) and  (c.code_type = 'NDC')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of leukemia drugs or CML drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- \hich\af4\dbch\af31505\loch\f4 get DME meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_dmendc as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_chckoccdr as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                                  inner join IN_codes_4incexcl as c on b.line_ndc_cd = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'NDC')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'cll'  and Code_for = 'No occurrence of leukemia drugs or CML drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_cll\hich\af4\dbch\af31505\loch\f4 _occdr as (
\par \tab \hich\af4\dbch\af31505\loch\f4      select distinct BENE_ID from IN_cll_PH union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_cll_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_cll_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_cll_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_cll_HOSPC) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_cll_partd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_cll_DMEndc)\tab   
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- benes with NO occ of drug during otcm
\par \hich\af4\dbch\af31505\loch\f4    IN_cll_checkdxs as (
\par \hich\af4\dbch\af31505\loch\f4    \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.* from
\par \hich\af4\dbch\af31505\loch\f4    \tab IN_cll_chckoccdr a left join IN_cll_occdr  b on a.bene_id = b.bene_id where b.bene_id is null),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- 1644\tab 
\par \hich\af4\dbch\af31505\loch\f4 -- select count (distinct bene_ID) from IN_cll_checkdxs;
\par 
\par 
\par 
\par 
\par ----------------------------------------------------------
\par \hich\af4\dbch\af31505\loch\f4 --------------- check dxs now
\par ----------------------------------------------------------
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during otcm
\par 
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_IPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a  \tab inner join MC_FFS_IP_DX as b on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4                         inner join IN_codes_4incexcl as c on b.DX = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu and c.code_type in ('ICD-9', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF dxs for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_SNFd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a inner join MC_FFS_SNF_DX as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab   inner join IN_codes_4incexcl as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu and c.code_type in ('ICD-9', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dx for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_PHd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a inner join MC_FFS_PH_DX as b\tab on a.bene_id = \hich\af4\dbch\af31505\loch\f4 b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4                       inner join IN_codes_4incexcl as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu and c.code_type in ('ICD-9', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dx for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_OPd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a inner join MC_FFS_OP_DX as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                 \tab \tab       inner join IN_codes_4incexcl as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu and c.code_type in \hich\af4\dbch\af31505\loch\f4 ('ICD-9', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME dx for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_DMEd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a inner join MC_FFS_DME_DX as b\tab on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4                       inner join IN_codes_4incexcl as c on b.DX = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu and c.code_type in ('ICD-9', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA dx for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_HHAd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a inner join MC_FFS_HHA_DX as b\tab on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4                       inner join IN_codes_4incexcl as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu  and c.code_type in ('ICD-9\hich\af4\dbch\af31505\loch\f4 ', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE dx for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_cll_HOSPCd as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select  a.BENE_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_cll_checkdxs as a inner join MC_FFS_HOSPC_DX as b\tab on a.bene_id = b.bene_id
\par \tab \tab \hich\af4\dbch\af31505\loch\f4                     inner join IN_codes_4incexcl as c on b.DX = c.code
\par \tab \hich\af4\dbch\af31505\loch\f4 where CLM_FROM_DT between Diag_Start_Date and  end_fu and c.code_type in ('ICD-9', 'ICD-10') and site = 'cll'
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_cll_4dxs as (
\par \tab \hich\af4\dbch\af31505\loch\f4      select distinct * from IN_cll_IPd union all
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_cll_SNFd) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct * from IN_cll_PHd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_cll_OPd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_cll_DMEd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_cll_HHAd) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct * from IN_cll_HOSPCd)
\par \hich\af4\dbch\af31505\loch\f4   )
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- benes with NO occ of drug or dx during otcm
\par \hich\af4\dbch\af31505\loch\f4 insert into Medicare.dbo.IN_cll_elig
\par \hich\af4\dbch\af31505\loch\f4 select a.bene_id, a.diag_start_date, a.prior_dt, a.end_fu
\par \hich\af4\dbch\af31505\loch\f4  from IN_cll_checkdxs a l\hich\af4\dbch\af31505\loch\f4 eft join IN_cll_4dxs b on a.bene_id = b.bene_id where b.bene_id is null;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --select count (distinct bene_ID) from IN_cll_elig;
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /************************* }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid15997028 \hich\af4\dbch\af31505\loch\f4 apply \hich\af4\dbch\af31505\loch\f4 scenario specific criterias for }{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 breast6 **************************/
\par \hich\af4\dbch\af31505\loch\f4 /***********************************************************/
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_br6_inex1n2_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_br6_inex1n2_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_br_ids on IN_br6_inex1n2_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- breast6
\par \hich\af4\dbch\af31505\loch\f4 with IN_Breast6_checksurg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select BENE_ID, Diag_Start_Date, end_fu, (DATEADD(Month, -1, Diag_Start_Date)) as prior_dt_1m from IN_breast_meta_benes
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par \tab 
\par 
\par --------\hich\af4\dbch\af31505\loch\f4  get IP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_IP as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join MC_FFS_IP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and 
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'Breast6'  and Code_for = 'Mastectomy'         \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_SNF as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and 
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site\hich\af4\dbch\af31505\loch\f4  = 'Breast6'  and Code_for = 'Mastectomy'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_PH as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type = 'HCPCS') and site = 'Breast6' and Code_for = 'Mastectomy'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- g\hich\af4\dbch\af31505\loch\f4 et OP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_OP_I as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join MC_FFS_OP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab \hich\af4\dbch\af31505\loch\f4      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and 
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type<>'HCPCS' and c.code_type<>'NDC') and site = 'Breast6' and Code_for = 'Mastectomy'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_OP_h as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code\hich\af4\dbch\af31505\loch\f4  
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m) ) and  
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type = 'HCPCS')  and site = 'Breast6' and Code_for = 'Mastectomy'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_DME as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join FFS_DMEL as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) a\hich\af4\dbch\af31505\loch\f4 nd 
\par \tab \hich\af4\dbch\af31505\loch\f4  (c.code_type = 'HCPCS') and site = 'Breast6' and Code_for = 'Mastectomy'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_HHA as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type = 'HCPCS')   and site = 'Breast6' and Code_for = 'Mastectomy'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_HOSPC as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_checksurg as a inner join FFS_HOSPCR as b on a.bene_id = b.b\hich\af4\dbch\af31505\loch\f4 ene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and 
\par \tab \hich\af4\dbch\af31505\loch\f4  (c.code_type = 'HCPCS')   and site = 'Breast6'  and Code_for = 'Mastectomy'         \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Breast6_4surg as (
\par \hich\af4\dbch\af31505\loch\f4            select distinct BENE_ID from IN_Breast6_IP union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_SNF) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_PH) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_OP_I) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_OP_h) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_DME) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_HHA) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_Breast6_HOSPC)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get surgeries procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_surg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID from IN_Breast6_4surg 
\par \hich\af4\dbch\af31505\loch\f4  ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- benes without surgery
\par \hich\af4\dbch\af31505\loch\f4     IN_Br\hich\af4\dbch\af31505\loch\f4 east6_nosurg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*  from IN_breast_meta_benes a left join IN_Breast6_surg b on
\par \tab \hich\af4\dbch\af31505\loch\f4 a.bene_id = b.bene_id where b.bene_id is null 
\par \hich\af4\dbch\af31505\loch\f4  ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 --- select count (distinct bene_ID) from IN_breast6_nosurg;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------ get benes that have 
\par \hich\af4\dbch\af31505\loch\f4 ------ no occurrence of anastrozole, letrozole, fulvestrant, tamoxifen, toremifene, or exemestane
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_PH_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_nosurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and 
\par \tab \hich\af4\dbch\af31505\loch\f4  (c.code_type = 'HCPCS') and site = 'Breast6' and Code_for = 'No evidence of a treatment implying ER/PR positive disease'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_OP_h_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_n\hich\af4\dbch\af31505\loch\f4 osurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= Diag_Start_Date) ) and  
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type = 'HCPCS')  and site = 'Breast6' and Code_for = 'No evidence of a treatment implying ER/PR positive disease'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_DME_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_nosurg as a inner join FFS_DMEL \hich\af4\dbch\af31505\loch\f4 as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <\hich\af4\dbch\af31505\loch\f4 = end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and 
\par \tab \hich\af4\dbch\af31505\loch\f4  (c.code_type = 'HCPCS') and site = 'Breast6' and Code_for = 'No evidence of a treatment implying ER/PR positive disease'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_HHA_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_nosurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_\hich\af4\dbch\af31505\loch\f4 DT >= Diag_Start_Date)) and  
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type = 'HCPCS')   and site = 'Breast6' and Code_for = 'No evidence of a treatment implying ER/PR positive disease'          \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_HOSPC_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_nosurg as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= Diag_Start_Date))\hich\af4\dbch\af31505\loch\f4  and  
\par \tab \hich\af4\dbch\af31505\loch\f4 (c.code_type = 'HCPCS')   and site = 'Breast6' and Code_for = 'No evidence of a treatment implying ER/PR positive disease'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PARtD meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_partd_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_nosurg as a inner join FFS_PDE as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab inner join IN_codes_4incexcl as c on b.PROD_SRVC_ID = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((SRVC_DT <= end_fu) and (SRVC_DT >= Diag_Start_Date)) and  (c.code_type = 'NDC')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'Breast6'  and Code_for = 'No evidence of a treatment implying ER/PR positive disease'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME ndc meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_dmendc_d as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_\hich\af4\dbch\af31505\loch\f4 ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_Breast6_nosurg as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab     inner join IN_codes_4incexcl as c on b.line_ndc_cd = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'NDC')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'Breast6'  and Code_for = 'No evidence of a treatment implying ER/PR positive disease'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_Breast6_4nodrugs as (
\par \hich\af4\dbch\af31505\loch\f4    \tab     select distinct BENE_ID from IN_Breast6_\hich\af4\dbch\af31505\loch\f4 PH_d union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_Breast6_OP_h_d) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_Breast6_DME_d) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_Breast6_HHA_d) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_Breast6_HOSPC_d) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_Breast6_partd_d) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_Breast6_dmendc_d) 
\par \tab \hich\af4\dbch\af31505\loch\f4       ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- benes without drugs
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_nodrugs as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.*  from IN_Breast6_nosurg a left join IN_Breast6_4nodrugs b on
\par \tab \hich\af4\dbch\af31505\loch\f4 a.bene_id = b.bene_id where b.bene_id is null 
\par \hich\af4\dbch\af31505\loch\f4  )
\par \hich\af4\dbch\af31505\loch\f4     --,
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_br6_inex1n2_ids
\par \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID from IN_Breast6_nodrugs;
\par 
\par \hich\af4\dbch\af31505\loch\f4 ---969
\par \hich\af4\dbch\af31505\loch\f4 --- select count(distinct bene_ID) from IN_Breast6_nodrugs;
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_br6_finalelig_ids;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_br6_finalelig_ids (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL, 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_br_ids on IN_br6_finalelig_ids;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_Breast6_check3n4 as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select a.BENE_ID, b.Diag_Start_Date, b.end_fu from 
\par \tab \hich\af4\dbch\af31505\loch\f4 IN_br6_inex1n2_ids a inner join IN_breast_meta_benes b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 ), 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -----Had a least one claim for any of trastuzumab, pertuzumab, lapatinib, or ado-trastuzumab emtansine
\par \hich\af4\dbch\af31505\loch\f4 ----- No receipt of a non-comparable therapy which means No occurrence of fam-trastuzumab or tucatinib
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_PH_d \hich\af4\dbch\af31505\loch\f4 as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 as a 
\par \hich\af4\dbch\af31505\loch\f4     inner join FFS_BCARRL as b on a.bene_id = b.bene_id and\hich\af4\dbch\af31505\loch\f4  
\par \hich\af4\dbch\af31505\loch\f4                                    LINE_1ST_EXPNS_DT between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast6' 
\par \hich\af4\dbch\af31505\loch\f4          and Code\hich\af4\dbch\af31505\loch\f4 _for in ('No receipt of a non-comparable therapy '         
\par \hich\af4\dbch\af31505\loch\f4                          ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4                          )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     ) --select * from IN_Breast6_PH_d;
\par \hich\af4\dbch\af31505\loch\f4    ,
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_OP_h_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4            from IN_Breast6_check3n4 as a inner join FFS_OPR  as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast6' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No receipt of a non-compar\hich\af4\dbch\af31505\loch\f4 able therapy '         
\par \hich\af4\dbch\af31505\loch\f4                          ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4     ,
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_DME_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4              an\hich\af4\dbch\af31505\loch\f4 d LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast6' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No receipt of a non-comparable therapy '         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --    select count(*) from IN_Breast6_DME_d;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_HHA_d as (
\par \hich\af4\dbch\af31505\loch\f4     Select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(cas\hich\af4\dbch\af31505\loch\f4 e when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 as a inner join FFS_HHAR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4               and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and site = 'Breast6' and c.code_type = 'HCPCS'
\par \hich\af4\dbch\af31505\loch\f4          and Code_for in ('No receipt of a non-comparable \hich\af4\dbch\af31505\loch\f4 therapy '         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --    select count(*) from    IN_Breast6_HHA_d ;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_HOSPC_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must re\hich\af4\dbch\af31505\loch\f4 ceive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4           and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast6' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No receipt of a non-comparable therapy '         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --        select count(*) from    IN_Breast6_HOSPC_d;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PARtD NDCs meds  for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_partd_d as (
\par \hich\af4\dbch\af31505\loch\f4         select\hich\af4\dbch\af31505\loch\f4  a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 as a inner join FFS_PDE as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4            and b.SRVC_DT  between Diag_Sta\hich\af4\dbch\af31505\loch\f4 rt_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.PROD_SRVC_ID = c.code and c.code_type = 'NDC' and site = 'Breast6' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No receipt of a non-comparable therapy '         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --        select count(*) from    IN_Breast6_partd_d ;
\par \hich\af4\dbch\af31505\loch\f4    
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME ndc meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast6_dmendc_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No receipt of a non-comparable therapy '
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as noncomp
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_\hich\af4\dbch\af31505\loch\f4 DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.LINE_NDC_CD = c.code and c.code_type = 'NDC' and site = 'Breast6' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No receipt of a non-comparable therapy '         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ,  IN_Breast6_4nodrugs_hrpos as (    
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID,a.Diag_Start_Date,a.end_fu
\par \hich\af4\dbch\af31505\loch\f4             ,noncomp =(SELECT max(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.noncomp),(b.noncomp),(d.noncomp),(e.noncomp),(f.noncomp),(g.noncomp),(h.noncomp)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4             ,her2 =(SELECT max(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.her2),(b.her2),(d.her2),(e.her2),(f.her2),(g.her2),(h.her2)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast6_check3n4 a 
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_OP_h_d b  on a.BENE_ID=b.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_PH_d c    on a.BENE_ID=c.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_DME_d d   on a.BENE_ID=d.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_HHA_d e   on a.BEN\hich\af4\dbch\af31505\loch\f4 E_ID=e.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_HOSPC_d f on a.BENE_ID=f.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_partd_d g on a.BENE_ID=g.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast6_dmendc_d h on a.BENE_ID=h.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4    )
\par 
\par \hich\af4\dbch\af31505\loch\f4 --    select q.BENE_ID,q.Diag_Start_Date,q.end_fu
\par \hich\af4\dbch\af31505\loch\f4 --        ,coalesce(q.noncomp,0) as noncomp
\par \hich\af4\dbch\af31505\loch\f4 --        ,coalesce(q.her2,0) as her2
\par \hich\af4\dbch\af31505\loch\f4 --        ,q.Surg_dt
\par \hich\af4\dbch\af31505\loch\f4 --    from IN_Breast6_4nodrugs_hrpos q
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_br6_finalelig_ids
\par \hich\af4\dbch\af31505\loch\f4 select distinct a.BENE_ID, a.Diag_Start_Date, a.end_fu from 
\par \hich\af4\dbch\af31505\loch\f4 IN_Breast6_check3n4 a left jo\hich\af4\dbch\af31505\loch\f4 in IN_Breast6_4nodrugs_hrpos b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (noncomp is null or noncomp = 0) and (her2 = 1);
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /******************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /******************************}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid15997028 \hich\af4\dbch\af31505\loch\f4  apply scenario specific criterias for }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 Breast 7 **************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /****************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_br7_chckelig_ids_f;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_br7_chckelig_ids_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL, 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 surg_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_br_ids on IN_br7_chckelig_ids_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_breast7_checkinc as (
\par \hich\af4\dbch\af31505\loch\f4     select BENE_I\hich\af4\dbch\af31505\loch\f4 D, Diag_Start_Date, end_fu
\par \hich\af4\dbch\af31505\loch\f4         , DATEADD(DAY, 200, end_fu) as end_fu200
\par \hich\af4\dbch\af31505\loch\f4         from IN_breast_nonmeta_benes
\par \hich\af4\dbch\af31505\loch\f4     ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------ need to know occurrence of ER/PR amd HER2 
\par \hich\af4\dbch\af31505\loch\f4 ------ need surg date for benes
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_breast7_PH_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_D\hich\af4\dbch\af31505\loch\f4 ate and end_fu200
\par \hich\af4\dbch\af31505\loch\f4             then LINE_1ST_EXPNS_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a 
\par \hich\af4\dbch\af31505\loch\f4     inner join FFS_BCARRL as b on a.bene_id = b.bene_id and 
\par \hich\af4\dbch\af31505\loch\f4                                    LINE_1ST_EXPNS_DT between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast7' 
\par \hich\af4\dbch\af31505\loch\f4          and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4                          ,'No evidence of a treatment \hich\af4\dbch\af31505\loch\f4 implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4                          ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4                          )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     ) --select * from IN_breast7_PH_d;
\par \hich\af4\dbch\af31505\loch\f4    ,
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_OP_h_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and RE\hich\af4\dbch\af31505\loch\f4 V_CNTR_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4             then REV_CNTR_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join FFS_OPR  as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast7' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4                          ,'No evidence of a treatment implying HER\hich\af4\dbch\af31505\loch\f4 2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4                          ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4     ,
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_DME_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_D\hich\af4\dbch\af31505\loch\f4 ate and end_fu200
\par \hich\af4\dbch\af31505\loch\f4             then LINE_1ST_EXPNS_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4              and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast7' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4            \hich\af4\dbch\af31505\loch\f4  ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --    select count(*) from IN_Breast7_DME_d;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_HHA_d as (
\par \hich\af4\dbch\af31505\loch\f4     Select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4             then REV_CNTR_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join FFS_HHAR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4               and REV_CNTR_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and site = 'Breast7' and c.code_type = 'HCPCS'
\par \hich\af4\dbch\af31505\loch\f4          and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     \hich\af4\dbch\af31505\loch\f4 group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --    select count(*) from    IN_Breast7_HHA_d ;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_HOSPC_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4             then REV_CNTR_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4           and REV_CNTR_DT  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast7' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     gr\hich\af4\dbch\af31505\loch\f4 oup by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --        select count(*) from    IN_Breast7_HOSPC_d;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PARtD NDCs meds  for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_partd_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join FFS_PDE as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4            and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.PROD_SRVC_ID = c.code and c.code_type = 'NDC' and site = 'Breast7' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying\hich\af4\dbch\af31505\loch\f4  ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --        select count(*) from    IN_Breast7_partd_d ;
\par \hich\af4\dbch\af31505\loch\f4    
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME ndc meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_dmendc_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end\hich\af4\dbch\af31505\loch\f4 ) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.LINE_NDC_CD = c.code and c.code_type = 'NDC' and site = 'Breast7' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'No evidence of a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par ------------------------------------------------------------
\par \hich\af4\dbch\af31505\loch\f4 ----------- IP, OP and SNF ICD codes for Mastectomy
\par \hich\af4\dbch\af31505\loch\f4 ----------- IP ICD for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_Breast7_IP as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID, min(b.icd_proc_dt) as CLM_DT
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc as a inner join MC_FFS_IP_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4              and icd_proc_dt  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.icd_proc = c.code and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  
\par \hich\af4\dbch\af31505\loch\f4         and site = 'Breast7' and c.Code_for = 'Maste\hich\af4\dbch\af31505\loch\f4 ctomy'              
\par \hich\af4\dbch\af31505\loch\f4     group by a.bene_ID
\par \hich\af4\dbch\af31505\loch\f4     ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF ICD for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast7_SNF as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID, min(b.icd_proc_dt) as CLM_DT
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc  as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4         and icd_proc_dt  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.icd_proc = c.code and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  
\par \hich\af4\dbch\af31505\loch\f4         and site = 'Breast7'  and c.Code_for = 'Mastectomy'             
\par \hich\af4\dbch\af31505\loch\f4     group by a.bene_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP ICD for benes during fu
\par \hich\af4\dbch\af31505\loch\f4 ,    IN_Breast7_OP_I as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID, min(b.icd_proc_dt) as CLM_DT
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_che\hich\af4\dbch\af31505\loch\f4 ckinc  as a inner join MC_FFS_OP_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4         and icd_proc_dt  between Diag_Start_Date and end_fu200
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.icd_proc = c.code and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  
\par \hich\af4\dbch\af31505\loch\f4         and site = 'Breast7'  and c.Code_for = 'Mastectomy'             
\par \hich\af4\dbch\af31505\loch\f4     group by a.bene_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par \hich\af4\dbch\af31505\loch\f4 ,  IN_Breast7_4nodrugs_hrpos as (    
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID,a.Diag_Start_Date,a.end_fu
\par \hich\af4\dbch\af31505\loch\f4             ,erpr =(SELECT max(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.erpr),(b.er\hich\af4\dbch\af31505\loch\f4 pr),(d.erpr),(e.erpr),(f.erpr),(g.erpr),(h.erpr)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4             ,her2 =(SELECT max(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.her2),(b.her2),(d.her2),(e.her2),(f.her2),(g.her2),(h.her2)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4             ,Surg_dt=(SELECT MIN(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.SURG),(b.surg),(d.Surg),(e.Surg),(f.Surg),(i.CLM_DT),(j.CLM_DT),(k.CLM_DT)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4     from IN_breast7_checkinc a 
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_OP_h_d b  on a.BENE_ID=b.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_breast7_PH_d c    on a.BENE_ID=c.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_DME_d d   on a.BENE_ID=d.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_HHA_d e   on a.BENE_ID=e.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_HOSPC_d f on a.BENE_ID=f.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_partd_d g on a.BENE_ID=g.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN\hich\af4\dbch\af31505\loch\f4 _Breast7_dmendc_d h on a.BENE_ID=h.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_IP i      on a.BENE_ID=i.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_SNF j     on a.BENE_ID=j.BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast7_OP_I k    on a.BENE_ID=k.BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4    )
\par 
\par \hich\af4\dbch\af31505\loch\f4 --    select q.BENE_ID,q.Diag_Start_Date,q.end_fu
\par \hich\af4\dbch\af31505\loch\f4 --        ,coalesce(q.erpr,0) as erpr
\par \hich\af4\dbch\af31505\loch\f4 --        ,coalesce(q.her2,0) as her2
\par \hich\af4\dbch\af31505\loch\f4 --        ,q.Surg_dt
\par \hich\af4\dbch\af31505\loch\f4 --    from IN_Breast7_4nodrugs_hrpos q
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_br7_chckelig_ids_f
\par \hich\af4\dbch\af31505\loch\f4 select distinct a.BENE_ID, a.Diag_Start_Date, a.end_fu, b.surg_dt \hich\af4\dbch\af31505\loch\f4 from 
\par \hich\af4\dbch\af31505\loch\f4 IN_breast7_checkinc a left join IN_Breast7_4nodrugs_hrpos b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (erpr is null or erpr = 0) and (her2 is null or her2 = 0);
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 --select count (di\hich\af4\dbch\af31505\loch\f4 stinct bene_ID) from IN_br7_chckelig_ids_f where surg_dt is not NULL;
\par 
\par \hich\af4\dbch\af31505\loch\f4 /******************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /******************************}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid15997028 \hich\af4\dbch\af31505\loch\f4  Apply scenario specific criterias for }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 Breast 8 **************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /****************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_br8_chckelig_ids_f;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_br8_chckelig_ids_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL, 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 surg_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index cci_br_ids on IN_br8_chckelig_ids_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 with IN_Breast8_checkinc as (
\par \hich\af4\dbch\af31505\loch\f4     select BENE_I\hich\af4\dbch\af31505\loch\f4 D, Diag_Start_Date, end_fu
\par \hich\af4\dbch\af31505\loch\f4         from IN_breast_nonmeta_benes
\par \hich\af4\dbch\af31505\loch\f4     ), 
\par 
\par \hich\af4\dbch\af31505\loch\f4 ------ need to know occurrence of ER/PR amd HER2 
\par \hich\af4\dbch\af31505\loch\f4 ------ need surg date for benes
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_PH_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Dat\hich\af4\dbch\af31505\loch\f4 e and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then LINE_1ST_EXPNS_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a 
\par \hich\af4\dbch\af31505\loch\f4     inner join FFS_BCARRL as b on a.bene_id = b.bene_id and 
\par \hich\af4\dbch\af31505\loch\f4                                    LINE_1ST_EXPNS_DT between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast8' 
\par \hich\af4\dbch\af31505\loch\f4          and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4                          ,'Must receive a treatment implying H\hich\af4\dbch\af31505\loch\f4 ER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4                          ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4                          )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     ) --select * from IN_Breast8_PH_d;
\par \hich\af4\dbch\af31505\loch\f4    ,
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_OP_h_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start\hich\af4\dbch\af31505\loch\f4 _Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then REV_CNTR_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join FFS_OPR  as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast8' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4                          ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4                  \hich\af4\dbch\af31505\loch\f4         ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4     ,
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_DME_d as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then LINE_1ST_EXPNS_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4              and LINE_1ST_EXPNS_DT  between Diag_Start_Date \hich\af4\dbch\af31505\loch\f4 and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast8' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --    select count(*) from IN_Breast8_DME_d;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_HHA_d as (
\par \hich\af4\dbch\af31505\loch\f4     Select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(cas\hich\af4\dbch\af31505\loch\f4 e when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then REV_CNTR_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join FFS_HHAR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4               and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner jo\hich\af4\dbch\af31505\loch\f4 in IN_codes_4incexcl as c on b.HCPCS_CD = c.code and site = 'Breast8' and c.code_type = 'HCPCS'
\par \hich\af4\dbch\af31505\loch\f4          and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --    select count(*) from    IN_Breast8_HHA_d ;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_HOSPC_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Cod\hich\af4\dbch\af31505\loch\f4 e_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4         , min(case when Code_for = 'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4             and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then REV_CNTR_DT end) as Surg
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4           and REV_CNTR_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join\hich\af4\dbch\af31505\loch\f4  IN_codes_4incexcl as c on b.HCPCS_CD = c.code and c.code_type = 'HCPCS' and site = 'Breast8' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             ,'Mastectomy'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --        select count(*) from    IN_Breast8_HOSPC_d;
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PARtD NDCs meds  for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_partd_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case \hich\af4\dbch\af31505\loch\f4 when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join FFS_PDE as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4            and b.SRVC_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.PROD_SRVC_ID = c.code and c.code_type = 'NDC' and site = 'Breast8' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par \hich\af4\dbch\af31505\loch\f4 --        select count(*) from    IN_Breast8_partd_d\hich\af4\dbch\af31505\loch\f4  ;
\par \hich\af4\dbch\af31505\loch\f4    
\par \hich\af4\dbch\af31505\loch\f4     ,
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME ndc meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_dmendc_d as (
\par \hich\af4\dbch\af31505\loch\f4         select a.bene_ID 
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'No evidence of a treatment implying ER/PR positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else 0 end) as ERPR
\par \hich\af4\dbch\af31505\loch\f4         , max(case when Code_for = 'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4             then 1 else\hich\af4\dbch\af31505\loch\f4  0 end) as HER2
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join FFS_DMEL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4             and b.LINE_1ST_EXPNS_DT  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.LINE_NDC_CD = c.code and c.code_type = 'NDC' and site = 'Breast8' 
\par \hich\af4\dbch\af31505\loch\f4         and Code_for in ('No evidence of a treatment implying ER/PR positive disease'         
\par \hich\af4\dbch\af31505\loch\f4             ,'Must receive a treatment implying HER2-positive disease'
\par \hich\af4\dbch\af31505\loch\f4         )
\par \hich\af4\dbch\af31505\loch\f4     group by a.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par ------------------------------------------------------------
\par \hich\af4\dbch\af31505\loch\f4 ----------- IP, OP and SNF ICD codes for Mastectomy
\par \hich\af4\dbch\af31505\loch\f4 ----------- IP ICD for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_Breast8_IP as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID\hich\af4\dbch\af31505\loch\f4 , min(b.icd_proc_dt) as CLM_DT
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc as a inner join MC_FFS_IP_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4              and icd_proc_dt  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.icd_proc = c.code and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  
\par \hich\af4\dbch\af31505\loch\f4         and site = 'Breast8' and c.Code_for = 'Mastectomy'              
\par \hich\af4\dbch\af31505\loch\f4     group by a.bene_ID
\par \hich\af4\dbch\af31505\loch\f4     ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF ICD for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_Breast8_SNF as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID, min(b.icd_proc_dt) as \hich\af4\dbch\af31505\loch\f4 CLM_DT
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc  as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4         and icd_proc_dt  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.icd_proc = c.code and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  
\par \hich\af4\dbch\af31505\loch\f4         and site = 'Breast8'  and c.Code_for = 'Mastectomy'             
\par \hich\af4\dbch\af31505\loch\f4     group by a.bene_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP ICD for benes during fu
\par \hich\af4\dbch\af31505\loch\f4 ,    IN_Breast8_OP_I as (
\par \hich\af4\dbch\af31505\loch\f4     select a.bene_ID, min(b.icd_proc_dt) as CLM_DT
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc  as a inner join MC_FFS_OP_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4         and icd_proc_dt  between Diag_Start_Date and end_fu
\par \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.icd_proc = c.code and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  
\par \hich\af4\dbch\af31505\loch\f4         and site = 'Breast8'  and c.Code_for = 'Mastectomy'             
\par \hich\af4\dbch\af31505\loch\f4     group by a.bene_ID
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par \hich\af4\dbch\af31505\loch\f4 ,  IN_Breast8_4nodrugs_hrpos as (    
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID,a.Diag_Start_Date,a.end_fu
\par \hich\af4\dbch\af31505\loch\f4        \hich\af4\dbch\af31505\loch\f4      ,erpr =(SELECT max(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.erpr),(b.erpr),(d.erpr),(e.erpr),(f.erpr),(g.erpr),(h.erpr)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4             ,her2 =(SELECT max(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.her2),(b.her2),(d.her2),(e.her2),(f.her2),(g.her2),(h.her2)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4             ,Surg_dt=(SELECT MIN(x) FROM 
\par \hich\af4\dbch\af31505\loch\f4                 (VALUES (c.SURG),(b.surg),(d.Surg),(e.Surg),(f.Surg),(i.CLM_DT),(j.CLM_DT),(k.CLM_DT)) AS value(x))
\par \hich\af4\dbch\af31505\loch\f4     from IN_Breast8_checkinc a 
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_OP_h_d b  on a.BENE_ID\hich\af4\dbch\af31505\loch\f4 =b.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_PH_d c    on a.BENE_ID=c.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_DME_d d   on a.BENE_ID=d.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_HHA_d e   on a.BENE_ID=e.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_HOSPC_d f on a.BENE_ID=f.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_partd_d g on a.BENE_ID=g.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_dmendc_d h on a.BENE_ID=h.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_IP i      on a.BENE_ID=i.BENE_ID
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_SNF j     on a.BENE_ID=j.BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4     left join IN_Breast8_OP_I k    on a.BENE_ID=k.BENE_ID 
\par \hich\af4\dbch\af31505\loch\f4    )
\par 
\par \hich\af4\dbch\af31505\loch\f4 --    select q.BENE_ID,q.Diag_Start_Date,q.end_fu
\par \hich\af4\dbch\af31505\loch\f4 --        ,coalesce(q.erpr,0) as erpr
\par \hich\af4\dbch\af31505\loch\f4 --        ,coalesce(q.her2,0) as her2
\par \hich\af4\dbch\af31505\loch\f4 --        ,q.Surg_dt
\par \hich\af4\dbch\af31505\loch\f4 --    fr\hich\af4\dbch\af31505\loch\f4 om IN_Breast8_4nodrugs_hrpos q
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_br8_chckelig_ids_f
\par \hich\af4\dbch\af31505\loch\f4 select distinct a.BENE_ID, a.Diag_Start_Date, a.end_fu, b.surg_dt from 
\par \hich\af4\dbch\af31505\loch\f4 IN_Breast8_checkinc a left join IN_Breast8_4nodrugs_hrpos b on a.bene_id = b.bene_id
\par \tab \hich\af4\dbch\af31505\loch\f4 where (erpr is null or erpr = 0) and (her2 = 1);
\par 
\par \hich\af4\dbch\af31505\loch\f4 -- select count (distinct bene_ID) from IN_br8_chckelig_ids_f where surg_dt is not null; 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /******************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /******************************}{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid15997028 \hich\af4\dbch\af31505\loch\f4  apply scenario specific criterias for }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid9779438 
\hich\af4\dbch\af31505\loch\f4 lung 10 ***************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /****************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_lung10_elig;
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_lung10_elig (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL, 
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index l10_elig on IN_lung10_elig;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PARtD meds for benes during otcm
\par \hich\af4\dbch\af31505\loch\f4 with  IN_lung10_partd_\hich\af4\dbch\af31505\loch\f4 4egfr as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_meta_benes as a inner join FFS_PDE as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab  inner join IN_codes_4incexcl as c on b.PROD_SRVC_ID = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((SRVC_DT <= end_fu) and (SRVC_DT >= Diag_Start_Date)) and  (c.code_type = 'NDC')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'Lung10'  and Code_for = 'One of the specified required drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \tab \hich\af4\dbch\af31505\loch\f4 IN_lung10_dme_4egfr as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_lung10_meta_benes as a inner join FFS_DMEL as b\hich\af4\dbch\af31505\loch\f4  on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab  inner join IN_codes_4incexcl as c on b.line_ndc_cd = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= Diag_Start_Date)) and  (c.code_type = 'NDC')   
\par \tab \hich\af4\dbch\af31505\loch\f4 and site = 'Lung10'  and Code_for = 'One of the specified required drugs'                     \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab ),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_lung10_egfr as (
\par \hich\af4\dbch\af31505\loch\f4    \tab     select distinct BENE_ID from IN_lung10_partd_4egfr union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID  from IN_lung10_dme_4egfr) 
\par 
\par \hich\af4\dbch\af31505\loch\f4     )
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_lung10_elig
\par \hich\af4\dbch\af31505\loch\f4 select distinct a.BENE_ID, a.Diag_Start_Date, a.prior_dt, a.end_fu from 
\par \hich\af4\dbch\af31505\loch\f4 IN_lung10_meta_bene\hich\af4\dbch\af31505\loch\f4 s a inner join IN_lung10_egfr b on a.bene_id = b.bene_id;
\par 
\par \hich\af4\dbch\af31505\loch\f4 --select count(distinct bene_ID) from IN_lung10_egfr;
\par 
\par 
\par 
\par 
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 /*****************************************************************************************/
\par \hich\af4\dbch\af31505\loch\f4 /******************************************* }{\rtlch\fcs1 \af4 \ltrch\fcs0 \f4\kerning0\insrsid15997028 \hich\af4\dbch\af31505\loch\f4 apply scenario specific criterias for }{\rtlch\fcs1 \af4 \ltrch\fcs0 
\f4\kerning0\insrsid9779438 \hich\af4\dbch\af31505\loch\f4 ocavp2 *************************************/
\par \hich\af4\dbch\af31505\loch\f4 /***************************************************************************************/
\par 
\par \hich\af4\dbch\af31505\loch\f4 Drop table Medicare.dbo.IN_ocavp2_chck_f 
\par \hich\af4\dbch\af31505\loch\f4 Create table Medicare.dbo.IN_ocavp2_chck_f (
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 BENE_ID varchar(15) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 Diag_Start_Date date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 prior_dt date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 end_fu date NULL,
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 subgrp varchar(20)
\par \tab \tab \hich\af4\dbch\af31505\loch\f4 );
\par 
\par \hich\af4\dbch\af31505\loch\f4 create clustered columnstore index ocav on IN_ocavp2_chck_f;
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4 with   IN_ocavp2_chec\hich\af4\dbch\af31505\loch\f4 ksurg as (select distinct * from IN_ocavp2_lessfrail_f),
\par 
\par \hich\af4\dbch\af31505\loch\f4       IN_ocavp2_IP_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join MC_FFS_IP_PROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'ocavp2'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF procs\hich\af4\dbch\af31505\loch\f4  for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_SNF_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join MC_FFS_SNF_PROC as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC')  and site = 'ocavp2'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get NCH procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_PH_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from I\hich\af4\dbch\af31505\loch\f4 N_ocavp2_checksurg as a inner join FFS_BCARRL as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'ocavp2'            \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_OP_I_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join MC_FFS_OP_P\hich\af4\dbch\af31505\loch\f4 ROC as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.icd_proc = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((icd_proc_dt <= end_fu) and (icd_proc_dt >= prior_dt_1m)) and (c.code_type<>'HCPCS' and c.code_type<>'NDC') and site = 'ocavp2'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP hcpcs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_OP_h_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join FFS_OPR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m) ) and  (c.code_type = 'HCPCS')  and site = 'ocavp2'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_DME_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join FFS_DMEL as b\tab on a.\hich\af4\dbch\af31505\loch\f4 bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((LINE_1ST_EXPNS_DT <= end_fu) and (LINE_1ST_EXPNS_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS') and site = 'ocavp2'             \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_HHA_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join FFS_HHAR as b\tab on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab  \hich\af4\dbch\af31505\loch\f4     inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'ocavp2'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE procs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_HOSPC_s as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct a.bene_ID
\par \tab \hich\af4\dbch\af31505\loch\f4 from IN_ocavp2_checksurg as a inner join FFS_HOSPCR as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4                         \tab \tab      inner join IN_codes_4incexcl as c on b.HCPCS_CD = c.code 
\par \tab \hich\af4\dbch\af31505\loch\f4 where ((REV_CNTR_DT <= end_fu) and (REV_CNTR_DT >= prior_dt_1m)) and  (c.code_type = 'HCPCS')   and site = 'ocavp2'           \tab 
\par \hich\af4\dbch\af31505\loch\f4  \tab and code_for = 'Surgical resection of head and neck'),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   IN_ocavp2_4surg as (
\par \hich\af4\dbch\af31505\loch\f4   \hich\af4\dbch\af31505\loch\f4          select distinct BENE_ID from IN_ocavp2_IP_s union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_SNF_s) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_PH_s) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_OP_I_s) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_OP_h_s) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_DME_s) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_HHA_s) union
\par \tab \hich\af4\dbch\af31505\loch\f4     (select distinct BENE_ID from IN_ocavp2_HOSPC_s)
\par \hich\af4\dbch\af31505\loch\f4   ),
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get surgeries procs for benes duri\hich\af4\dbch\af31505\loch\f4 ng fu
\par \hich\af4\dbch\af31505\loch\f4     IN_ocavp2_surg as (
\par \tab \hich\af4\dbch\af31505\loch\f4 select distinct BENE_ID from IN_ocavp2_4surg 
\par \hich\af4\dbch\af31505\loch\f4  )
\par 
\par \hich\af4\dbch\af31505\loch\f4 --insert into IN_ocavp2_elig
\par \hich\af4\dbch\af31505\loch\f4 ,IN_ocavp2_checksubgrp as (select a.BENE_ID, a.Diag_Start_Date, a.prior_dt, a.end_fu from
\par \hich\af4\dbch\af31505\loch\f4 IN_ocavp2_checksurg a left join IN_ocavp2_surg b on a.bene_id = b.bene_id where b.bene_id is null)
\par \hich\af4\dbch\af31505\loch\f4 --select count(distinct bene_ID) from IN_ocavp2_checksubgrp
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get IP dxs for benes during fu. 
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_IPd as (
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a    inner join MC_FFS_IP_DX as b on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT between  Diag_Start_Date and end_fu) and (dx like 'C10\hich\af4\dbch\af31505\loch\f4 %' or dx like 'C13%' or dx like 'C32%'))
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get SNF dxs for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_SNFd as (
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a inner join MC_FFS_SNF_DX as b   on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT between  Diag_Start_Date and end_fu) and (dx like 'C10%' or dx like 'C13%' or dx like 'C32%'))
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get PH dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_PHd as (
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a inner join MC_FFS_PH_DX as b    on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT between  Diag_Start_Date and end_fu) and (dx like 'C10%' or dx like 'C13%' or dx like 'C32%'))
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get OP dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_OPd as (
\par \hich\af4\dbch\af31505\loch\f4     select a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a inner join MC_FFS_OP_DX as b    on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT between  Diag_Start_Date and end_fu) and (dx like 'C10%' or dx like 'C13%' or dx like 'C32%'))
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get DME dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_DMEd as (
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a inner join MC_FFS_DME_DX as b    on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT between  Diag_Start_Date and end_fu) and (dx like 'C10%' or dx like 'C13%' or dx like 'C32%'))
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HHA dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_HHAd as (
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a inner join MC_FFS_HHA_DX as b    on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT \hich\af4\dbch\af31505\loch\f4 between  Diag_Start_Date and end_fu) and (dx like 'C10%' or dx like 'C13%' or dx like 'C32%'))
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- get HOSPICE dx for benes during fu
\par \hich\af4\dbch\af31505\loch\f4     ,IN_ocavp2_HOSPCd as (
\par \hich\af4\dbch\af31505\loch\f4     select  a.BENE_ID, dx
\par \hich\af4\dbch\af31505\loch\f4     from IN_ocavp2_checksubgrp as a inner join MC_FFS_HOSPC_DX as b    on a.bene_id = b.bene_id
\par \hich\af4\dbch\af31505\loch\f4     where (CLM_FROM_DT between  Diag_Start_Date and end_fu) and (dx like 'C10%' or dx like 'C13%' or dx like 'C32%') )
\par 
\par \hich\af4\dbch\af31505\loch\f4 -------- combine claims 
\par 
\par \hich\af4\dbch\af31505\loch\f4   ,IN_ocavp2_subgrp as (
\par \hich\af4\dbch\af31505\loch\f4            select distinct BENE_ID, dx from IN_ocavp2_IPd union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct BENE_ID, dx from IN_ocavp2_SNFd) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct BENE_ID, dx from IN_ocavp2_PHd) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct BENE_ID, dx from IN_ocavp2_OP\hich\af4\dbch\af31505\loch\f4 d) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct BENE_ID, dx from IN_ocavp2_DMEd) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct BENE_ID, dx from IN_ocavp2_HHAd) union
\par \hich\af4\dbch\af31505\loch\f4         (select distinct BENE_ID, dx from IN_ocavp2_HOSPCd)
\par \hich\af4\dbch\af31505\loch\f4   )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 , ind as (
\par \hich\af4\dbch\af31505\loch\f4   select  bene_ID
\par \hich\af4\dbch\af31505\loch\f4          , max(case when dx like 'C10%' then 1 else 0 end )as Oropha_chck
\par \hich\af4\dbch\af31505\loch\f4          , max(case when dx like 'C13%' then 1 else 0 end) as Hypoph_chck
\par \hich\af4\dbch\af31505\loch\f4          , max(case when dx like 'C32%' then 1 else 0 end) as Larynx_ind
\par \hich\af4\dbch\af31505\loch\f4   from IN_ocavp2_subgrp 
\par \hich\af4\dbch\af31505\loch\f4   group by bene_id
\par \hich\af4\dbch\af31505\loch\f4   )
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 insert into IN_ocavp2_chck_f
\par \hich\af4\dbch\af31505\loch\f4   select a.BENE_ID, a.Diag_Start_Date, a.prior_dt, a.end_fu, 
\par \hich\af4\dbch\af31505\loch\f4          (case when Oropha_chck=1 then 'Oropha' 
\par \hich\af4\dbch\af31505\loch\f4                when (Oropha_chck is NULL or Oropha_chck = 0) and Hypoph_chck=1 then 'Hypoph'
\par \hich\af4\dbch\af31505\loch\f4                when (Oropha_chck is NULL or Oropha_chck = 0) and (Hypoph_chck is null or Hypoph_chck = 0) and (Larynx_ind = 1) then 'Larynx'
\par \hich\af4\dbch\af31505\loch\f4                else 'Lip_oral' end) as subgrp
\par \hich\af4\dbch\af31505\loch\f4         from IN_ocavp2_checksubgrp a left join ind b on a.bene_id = b.bene_id;
\par \hich\af4\dbch\af31505\loch\f4 --  ,count (d\hich\af4\dbch\af31505\loch\f4 istinct bene_ID) from ind
\par \hich\af4\dbch\af31505\loch\f4  -- group by case when Oropha_chck=1 then 'Oropha' when oropha_chck NE 1 and Hypoph_chck=1 then 'Hypoph' else 'Larynx' end
\par \hich\af4\dbch\af31505\loch\f4   ;
\par 
\par 
\par \hich\af4\dbch\af31505\loch\f4 select distinct subgrp, count(distinct subgrp) from IN_ocavp2_chck_f
\par \hich\af4\dbch\af31505\loch\f4 group by subgrp
\par 
\par \hich\af4\dbch\af31505\loch\f4 --Radiation of head and neck
\par 
\par 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210094a9528694070000c7200000160000007468656d652f7468656d652f
7468656d65312e786d6cec595f8b1bc9117f0fe43b0cf32e6b66248da4c5f2a1bfdeb3776d63c90ef7d82bb566dadb333d4cb7762d8e83e07bca4b207077e421
0779cb430839c8418ebce4c3186c92cb874875cf68d42db5bc7f30c184dd7dd1b47e55fd9baaeaaa52f5fdcf5e27d4b9c039272cedb9fe3dcf75703a670b9246
3df7c56c52ebb80e17285d20ca52dc73d798bb9f3df8e52feea32311e3043b209ff223d4736321b2a37a9dcf6119f17b2cc3297cb7647982043ce6517d91a34b
d09bd07ae079613d4124759d1425a0f6e97249e6d8994995ee838df23185c75470b930a7f954aac68684c22ece7d89e06b3ea4b9738168cf857d16ec72865f0b
d7a1880bf8a2e77aeacfad3fb85f4747a51015076435b989fa2be54a81c579a0f6cca3b36a536f1c749a7ea55f01a8d8c78d3bf2bfd2a700683e87372db8e83a
fd56e8758212ab818a8f16ddddb6df30f19afec61e67bf1b0e82a6a15f810afdcd3dbc37e98e472d03af4005beb587ef7bc1a0db30f00a54e0c33d7c73dc6f07
6303af403125e9f93e3a6c773a6189ae204b468fadf06e187aed5109dfa2201aaae8925b2c592a0ec55a825eb17c020009a44890d411eb0c2fd11ca2b89f09c6
9d11e119456bd7c950ca382c7b81ef43e835bda0fa571647471869d2921730e17b4b928fc3e739c944cf7d045a5d0df2eea79fdebef9f1ed9bbfbffdfaebb76f
feea9c902816852a43ee18a5912ef7f39f7ef79fef7fedfcfb6f7ffcf99b6fed78aee3dfffe537effff1cf0fa987a3b635c5bbef7e78ffe30fef7effdb7ffdf9
1b8bf67e8ece74f88c24983b4ff0a5f39c25f082ca14267f7c96df4c621623a24bf4d388a314c95d2cfac72236d04fd688220b6e804d3bbecc21d5d8800f57af
0cc2d3385f0962d1f8384e0ce0296374c072ab151ecbbd3433cf566964df3c5fe9b8e7085dd8f61ea2d4f0f27895418e253695c3181b349f51940a14e1140b47
7ec7ce31b6bcdd178418763d25f39c71b614ce17c419206235c98c9c19d1b4153a2609f8656d2308fe366c73fad219306a7beb11be3091703610b5909f616a98
f1215a0994d854ce504275839f2011db484ed7f95cc78db9004f47983267bcc09cdb649ee6f0be9ad31f23c86e56b79fd27562227341ce6d3a4f10633a72c4ce
87314a321b764ad258c77ececf214491f38c091bfc949927443e831f507ad0dd2f0936dc7d75367801594ea7b40d10f9cd2ab7f8f2216646fc4ed77489b02dd5
f4f3c448b1fd9c58a363b08a8cd03ec198a24bb4c0d879f1b985c1806586cdb7a41fc590558eb12db01e213356e5738a39f44ab2b9d9cf9327841b213bc5113b
c0e774bd9378d6284d507e48f313f0ba6ef3f1590e87d142e1299d9febc027047a408817ab519e72d0a105f741adcf62641430f9ccedf1bace0dff5de78cc1b9
7c65d0b8c6b904197c631948ecbacc076d3343d4d8601b3033449c135bba0511c3fd5b11595c95d8ca2ab7340fedd60dd01d194d4f42d22b3aa0ff5de703fdc5
bb3f7c6f09c18fd3edd8151ba9ea867dcea15472bcd3dd1cc2edf63443962fc8a7dfd28cd02a7d86a18aece7abbb8ee6aea371ffef3b9a43e7f9ae8f39d46ddc
f5312ef417777d4c395af9387dccb67581ae468e178a318f1afa2407673e4b42e954ac293ee16aecc3e1d7cc62028b524ecd3b713503cc62f828cb1c6c60e0a2
1c29192767e25744c4d31865301bf25da924e2a5ea883b19e3303252cb56dd124f57c9295b14a34e355bf28acaca91d8ae7b2d183a15eb30a612053a6c978b92
9f9aa7025fc5365263d60d01297b1312da6626898685447bb37805093935fb382cba16161da97ee3aa3d5300b5ca2bf073db811fe93db7d594846046cee7d09a
2fa49f0a576fbcab9cf9313d7dc8984604c058b1781318ca579eee4aae075f4fbe5d116ad7f0b4414239a5082b9384b28c6af0780c3f82cbe894abd7a171535f
77b72e35e84953a8fd20beb734da9d0fb1b8adaf416e3737d054cf1434752e7b6ed86841c8cc51d673973032868f4906b1c3e52f2e4423b877998bbc38f0b7c9
2c59cec508f1b830b84a3a857b122270ee5092f45cf9fa951b68aa7288e2e60790103e59725d482b9f1a3970bae964bc5ce2b9d0ddaead484b178f90e18b5c61
fd5689df1e2c25d90adc3d8d1797ce195de5cf118458abed4b032e08879b03bfb0e682c0555895c8b6f1b75398cae4afdf45a9182ad611cd625456143d991770
554f2a3aeaa9b281f654be33185433495908cf22596075a31ad5b42a5d05878355f76a2169392d696e6ba6915564d5b4673163874d19d8b1e5ed8abcc66a6362
c8697a852f52f76ecaed6e72dd4e9f505509307865bfdb957e8dda7633839a64bc9f8665ce2e57cddab179c12ba85da74868593fdca8ddb15b5523acdbc1e2ad
2a3fc8ed462d2c2d377da5b2b4ba33d7afb5d9d92b481e23e872575470e54a98ebe608bab2a9ea498ab40147e4b5288f067c725639e9b95f7aad7e7318b48635
afd31ad79a8da657ebb4fa8d5abfd56af8e396ef8d06c1575058449cf8ade2be7e02d717745ddedaabf5bd9bfb647343736fce923a5337f375455cdddcfbc1e1
9b7b8740d2f93218fbcda01f0c6bc3911fd69ac128ac75da8d7e6d1884a3a00f293d9cf4bf729d0b05f607a3d164d20a6ae110704dafdfaaf5078d612dec8c07
c1c41f37471e80cbccf91afa6fb0e9c616f051f17af05f000000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d
652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d
363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d26245228
2e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9
850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c0200001300000000000000000000
000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b000000000000000000
00000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c00000000000000000000000000190200
007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210094a9528694070000c720000016000000000000
00000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b010000270000
00000000000000000000009e0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000990b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax376\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;
\lsdsemihidden1 \lsdlocked0 Placeholder Text;\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;
\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;
\lsdsemihidden1 \lsdlocked0 Revision;\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;
\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;
\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdpriority62 \lsdlocked0 Light Grid Accent 5;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hashtag;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Unresolved Mention;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Link;}}{\*\datastore 01050000
02000000180000004d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e5000000000000000000000000605f
95242303dc01feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}